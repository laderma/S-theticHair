"use strict";function onUpgrade(n,e,t){var r=!1;proxies.forEach(function(a){if(!r&&n&&a.config.ws&&utils.matchContext(a.config.context,n.url)){a.config.rules.length&&a.config.rules.forEach(rewrite(n)),a.server.ws(n,e,t),r=!0;var i=n.url,s=(a.server.options.secure?"wss://":"ws://")+a.server.options.target.host+":"+a.server.options.target.port+n.url;grunt.log.verbose.writeln("[WS] Proxied request: "+i+" -> "+s+"\n"+JSON.stringify(n.headers,!0,2))}})}function enableWebsocket(n){n&&!n.proxyWs&&(n.proxyWs=!0,grunt.log.verbose.writeln("[WS] Catching upgrade event..."),n.on("upgrade",onUpgrade))}function removeHiddenHeaders(n){var e=n.config.hideHeaders;e&&e.length>0&&n.server.on("proxyRes",function(n){var t=n.headers;e.forEach(function(n){n in t&&delete t[n]})})}var utils=module.exports,httpProxy=require("http-proxy"),grunt=require("grunt"),_=require("lodash"),proxies=[],rewrite=function(n){return function(e){e.from.test(n.url)&&(n.url=n.url.replace(e.from,e.to))}};utils.registerProxy=function(n){proxies.push(n)},utils.proxies=function(){return proxies},utils.reset=function(){proxies=[]},utils.validateRewrite=function(n){return n&&"undefined"!=typeof n.from&&"undefined"!=typeof n.to&&"string"==typeof n.from&&"string"==typeof n.to?!0:!1},utils.processRewrites=function(n){var e=[];return Object.keys(n||{}).forEach(function(t){var r={from:t,to:n[t]};utils.validateRewrite(r)?(r.from=new RegExp(r.from),e.push(r),grunt.log.writeln("Rewrite rule created for: ["+r.from+" -> "+r.to+"].")):grunt.log.error("Invalid rule")}),e},utils.matchContext=function(n,e){var t,r,a,i,s=n;return _.isArray(s)||(s=[s]),t=_.filter(s,function(n){return"!"!==n.charAt(0)}),r=_.filter(s,function(n){return"!"===n.charAt(0)}),r=_.map(r,function(n){return n.slice(1)}),(i=_.find(r,function(n){return 0===e.lastIndexOf(n,0)}))?!1:(a=_.find(t,function(n){return 0===e.lastIndexOf(n,0)}),null!=a)},utils.proxyRequest=function(n,e,t){var r=!1;enableWebsocket(n.connection.server),proxies.forEach(function(t){if(!r&&n&&utils.matchContext(t.config.context,n.url)){t.config.rules.length&&t.config.rules.forEach(rewrite(n)),null!=t.config.headers&&_.forOwn(t.config.headers,function(e,t){n.headers[t]=e}),t.server.proxyRequest(n,e,t.server),removeHiddenHeaders(t),r=!0;var a=n.originalUrl,i=(t.server.options.secure?"https://":"http://")+t.server.options.target.host+":"+t.server.options.target.port+n.url;grunt.log.verbose.writeln("Proxied request: "+a+" -> "+i+"\n"+JSON.stringify(n.headers,!0,2))}}),r||t()};