"use strict";var grunt=require("grunt"),utils=require("../lib/utils.js");exports.connect_proxy={setUp:function(n){n()},default_options:function(n){n.expect(8);var e=utils.proxies();n.equal(e.length,5,"should return five valid proxies"),n.notEqual(e[0].server,null,"server should be configured"),n.equal(e[0].config.context,"/defaults","should have context set from config"),n.equal(e[0].config.host,"www.defaults.com","should have host set from config"),n.equal(e[0].config.port,80,"should have default port 80"),n.equal(e[0].config.https,!1,"should have default http"),n.equal(e[0].config.xforward,!1,"should have default xforward"),n.equal(e[0].config.ws,!1,"should have default ws to false"),n.done()},full_options:function(n){n.expect(11);var e=utils.proxies();n.equal(e.length,5,"should return five valid proxies"),n.notEqual(e[1].server,null,"server should be configured"),n.equal(e[1].config.context,"/full","should have context set from config"),n.equal(e[1].config.host,"www.full.com","should have host set from config"),n.equal(e[1].config.port,8080,"should have port set from config"),n.equal(e[1].config.https,!0,"should have http set from config"),n.equal(e[1].config.xforward,!0,"should have xforward set from config"),n.equal(e[1].config.ws,!0,"should have ws set from config"),n.deepEqual(e[1].config.rewrite,{"^/full":"/anothercontext"},"should have rewrite set from config"),n.equal(e[1].config.rules.length,1,"rules array should have an item"),n.deepEqual(e[1].config.rules[0],{from:new RegExp("^/full"),to:"/anothercontext"},"rules object should be converted to regex"),n.done()},two_rewrites:function(n){n.expect(2);var e=utils.proxies()[2].config;n.equal(e.rules.length,2,"rules array should have two items"),n.deepEqual(e.rewrite,{"^/context":"/anothercontext",test:"testing"},"should have rewrite set from config"),n.done()},invalid_configs:function(n){n.expect(5);var e=utils.proxies();n.equal(e.length,5,"should not add the 2 invalid proxies"),n.notEqual(e[0].config.context,"/missinghost","should not have context set from config with missing host"),n.notEqual(e[0].config.host,"www.missingcontext.com","should not have host set from config with missing context"),n.notEqual(e[1].config.context,"/missinghost","should not have context set from config with missing host"),n.notEqual(e[1].config.host,"www.missingcontext.com","should not have host set from config with missing context"),n.done()},invalid_rewrite:function(n){n.expect(3);var e=utils.proxies();n.equal(e.length,5,"proxies should still be valid"),n.equal(e[3].config.rules.length,1,"rules array should have one valid item"),n.deepEqual(e[3].config.rules[0],{from:new RegExp("^/in"),to:"/thisis"},"rules object should be converted to regex"),n.done()}};