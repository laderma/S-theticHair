function compare(e,n){if(assert.equal(typeof e,typeof n,"types didn't match"),"object"!=typeof e||null===e)assert.strictEqual(e,n,"result doesn't equal expected");else for(var t in e)assert.ok(t in n,"result didn't contain property "+t),compare(e[t],n[t])}var fs=require("fs"),path=require("path"),assert=require("assert"),util=require("util"),Parser=require("htmlparser2").Parser,Handler=require("../"),basePath=path.resolve(__dirname,"cases"),inspectOpts={showHidden:!0,depth:null};fs.readdirSync(basePath).filter(RegExp.prototype.test,/\.json$/).map(function(e){return path.resolve(basePath,e)}).map(require).forEach(function(e){it(e.name,function(){var n=e.expected,t=new Handler(function(e,t){assert.ifError(e);try{compare(n,t)}catch(r){throw r.expected=util.inspect(n,inspectOpts),r.actual=util.inspect(t,inspectOpts),r}},e.options),r=e.html,i=new Parser(t,e.options);if(e.streaming||void 0===e.streaming){for(var a=0;a<r.length;a++)i.write(r.charAt(a));i.done()}i.parseComplete(r)})});