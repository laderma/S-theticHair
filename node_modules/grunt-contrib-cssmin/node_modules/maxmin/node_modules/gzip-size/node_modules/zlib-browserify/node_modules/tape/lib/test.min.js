function Test(e,n,t){for(var a,r="(anonymous)",i={},o=0;o<arguments.length;o++)switch(typeof arguments[o]){case"string":r=arguments[o];break;case"object":i=arguments[o]||i;break;case"function":a=arguments[o]}EventEmitter.call(this),this.name=r||"(anonymous)",this.assertCount=0,this._skip=i.skip||!1,this._plan=void 0,this._cb=a,this._progeny=[],this._ok=!0}var EventEmitter=require("events").EventEmitter,deepEqual=require("deep-equal"),defined=require("defined"),path=require("path");module.exports=Test,Test.prototype=new EventEmitter,Test.prototype.run=function(){if(this._skip)return this.end();try{this._cb(this)}catch(e){this.error(e),this.end()}},Test.prototype.test=function(e,n,t){var r=new Test(e,n,t);this._progeny.push(r),this.emit("test",r)},Test.prototype.comment=function(e){this.emit("result",e.trim().replace(/^#\s*/,""))},Test.prototype.plan=function(e){this._plan=e,this.emit("plan",e)},Test.prototype.end=function(){this.ended||this.emit("end"),void 0===this._plan||this._planError||this.assertCount===this._plan||(this._planError=!0,this.fail("plan != count",{expected:this._plan,actual:this.assertCount})),this.ended=!0},Test.prototype._exit=function(){void 0===this._plan||this._planError||this.assertCount===this._plan?this.ended||this.fail("test exited without ending"):(this._planError=!0,this.fail("plan != count",{expected:this._plan,actual:this.assertCount}))},Test.prototype._assert=function(e,n){var t=this,r=n.extra||{},i={id:t.assertCount++,ok:Boolean(e),skip:defined(r.skip,n.skip),name:defined(r.message,n.message,"(unnamed assert)"),operator:defined(r.operator,n.operator),actual:defined(r.actual,n.actual),expected:defined(r.expected,n.expected)};this._ok=Boolean(this._ok&&e),e||(i.error=defined(r.error,n.error,new Error(i.name)));for(var a=new Error("exception"),o=(a.stack||"").split("\n"),s=path.dirname(__dirname)+"/",u=0;u<o.length;u++){var l=/^\s*\bat\s+(.+)/.exec(o[u]);if(l){var c=l[1].split(/\s+/),f=/(\/[^:\s]+:(\d+)(?::(\d+))?)/.exec(c[1]);if(f&&f[1].slice(0,s.length)!==s){i.functionName=c[0],i.file=f[1],i.line=Number(f[2]),f[3]&&(i.column=f[3]),i.at=l[1];break}}}t.emit("result",i),t._plan===t.assertCount&&process.nextTick(function(){t.ended||t.end()}),!t._planError&&t.assertCount>t._plan&&(t._planError=!0,t.fail("plan != count",{expected:t._plan,actual:t.assertCount}))},Test.prototype.fail=function(e,n){this._assert(!1,{message:e,operator:"fail",extra:n})},Test.prototype.pass=function(e,n){this._assert(!0,{message:e,operator:"pass",extra:n})},Test.prototype.skip=function(e,n){this._assert(!0,{message:e,operator:"skip",skip:!0,extra:n})},Test.prototype.ok=Test.prototype["true"]=Test.prototype.assert=function(e,n,t){this._assert(e,{message:n,operator:"ok",expected:!0,actual:e,extra:t})},Test.prototype.notOk=Test.prototype["false"]=Test.prototype.notok=function(e,n,t){this._assert(!e,{message:n,operator:"notOk",expected:!1,actual:e,extra:t})},Test.prototype.error=Test.prototype.ifError=Test.prototype.ifErr=Test.prototype.iferror=function(e,n,t){this._assert(!e,{message:defined(n,String(e)),operator:"error",actual:e,extra:t})},Test.prototype.equal=Test.prototype.equals=Test.prototype.isEqual=Test.prototype.is=Test.prototype.strictEqual=Test.prototype.strictEquals=function(e,n,t,r){this._assert(e===n,{message:defined(t,"should be equal"),operator:"equal",actual:e,expected:n,extra:r})},Test.prototype.notEqual=Test.prototype.notEquals=Test.prototype.notStrictEqual=Test.prototype.notStrictEquals=Test.prototype.isNotEqual=Test.prototype.isNot=Test.prototype.not=Test.prototype.doesNotEqual=Test.prototype.isInequal=function(e,n,t,r){this._assert(e!==n,{message:defined(t,"should not be equal"),operator:"notEqual",actual:e,notExpected:n,extra:r})},Test.prototype.deepEqual=Test.prototype.deepEquals=Test.prototype.isEquivalent=Test.prototype.looseEqual=Test.prototype.looseEquals=Test.prototype.same=function(e,n,t,r){this._assert(deepEqual(e,n),{message:defined(t,"should be equivalent"),operator:"deepEqual",actual:e,expected:n,extra:r})},Test.prototype.notDeepEqual=Test.prototype.notEquivalent=Test.prototype.notDeeply=Test.prototype.notSame=Test.prototype.isNotDeepEqual=Test.prototype.isNotDeeply=Test.prototype.isNotEquivalent=Test.prototype.isInequivalent=function(e,n,t,r){this._assert(!deepEqual(e,n),{message:defined(t,"should not be equivalent"),operator:"notDeepEqual",actual:e,notExpected:n,extra:r})},Test.prototype["throws"]=function(e,n,t,r){"string"==typeof n&&(t=n,n=void 0);var i=void 0;try{e()}catch(a){i={error:a};var o=a.message;delete a.message,a.message=o}var s=i;n instanceof RegExp&&(s=n.test(i&&i.error),n=String(n)),this._assert(s,{message:defined(t,"should throw"),operator:"throws",actual:i&&i.error,expected:n,error:!s&&i&&i.error,extra:r})},Test.prototype.doesNotThrow=function(e,n,t,r){"string"==typeof n&&(t=n,n=void 0);var i=void 0;try{e()}catch(a){i={error:a}}this._assert(!i,{message:defined(t,"should throw"),operator:"throws",actual:i&&i.error,expected:n,error:i&&i.error,extra:r})};