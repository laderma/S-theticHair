var test=require("../"),harness=test.createHarness({exit:!1}),collector={written:[],ended:!1,writable:!0,write:function(e){if(console.log("#> %s",e.replace(/\n$/,"").split(/\n/).join("\n#> ")),this.ended)throw new Error("write after end");return this.written.push(e),!0},end:function(e){if(console.error("collector end"),this.ended)throw new Error("end after end");e&&this.write(e),this.ended=!0},on:function(){},emit:function(){},removeListener:function(){}},wanted=["TAP version 13","# harness test","# hello","ok 1 this is ok","not ok 2 this is not ok","  ---","    operator: fail","    expected:","    actual:","  ...","# sub harness test","ok 3 math still works","ok 4 except when it doesn't","# sub harness internal test","ok 5 gas","ok 6 lulz i am immature","","1..6","# tests 6","# pass  5","# fail  1",""];harness.stream.pipe(collector),test("correct output",function(e){harness.stream.on("end",function(){var n=collector.written.join("").split(/\n/).map(function(e){return e.replace(/\s+$/,"")});e.same(n,wanted,"got expected output"),e.end()}),harness("harness test",function(e){e.comment("hello"),e.pass("this is ok"),e.fail("this is not ok"),e.test("sub harness test",function(e){e.equal(4,4,"math still works"),e.notEqual(.2+.1,.3,"except when it doesn't"),e.test("sub harness internal test",function(e){console.error("sub harness internal test"),e.pass("gas"),e.pass("lulz i am immature"),e.end()}),e.end()}),e.end(),console.error("called ht.end")})});