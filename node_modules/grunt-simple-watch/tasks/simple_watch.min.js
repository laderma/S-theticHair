module.exports=function(n){"use strict";var e=require("fs"),r=(require("path"),{});n.registerTask("simple-watch","Run predefined tasks whenever watched files change.",function(t){function p(e,t){if("deleted"===f[t]&&"added"===e&&(e="changed"),f[t]=e,n.event.listeners("watch").length>0){var r=[];i.forEach(function(e){n.file.match(e.files,t).length>0&&r.push(e.name)}),r.forEach(function(r){n.event.emit("watch",e,t,r)})}f[t]=e,g()}function m(n){if(!d[n]){var t=null;try{t=e.statSync(n)}catch(a){return}d[n]=t,r[n]=+d[n].mtime}}function b(n){d[n]&&delete d[n]}this.requiresConfig("watch");var a=n.config("watch"),i=t?[t]:Object.keys(a).filter(function(n){return"string"!=typeof a[n]&&!Array.isArray(a[n])});i=i.map(function(e){var t=e;e=["watch",e],this.requiresConfig(e.concat("files"),e.concat("tasks"));var r=n.config(e);return r.name=t,r},this),("string"==typeof a.files||Array.isArray(a.files))&&i.push({files:a.files,tasks:a.tasks}),n.log.writeln("Simple Watch, Waiting...");var h,s=this.async(),o=n.util._.chain(i).pluck("files").flatten().uniq().value(),l=n.file.expand.bind(n.file,o),c=this.nameArgs,d={},f={};n.fail.warnAlternate=function(){n.task.clearQueue({untilMarker:!0}).run(c)};var g=n.util._.debounce(function(){clearInterval(h),n.log.ok();var e=Object.keys(f);e.forEach(function(e){n.log.ok('File "'+e+'" '+f[e]+".")}),Object.keys(d).forEach(b),i.forEach(function(t){var r=n.file.expand(t.files),a=n.util._.intersection(e,r);a.length>0&&t.tasks&&n.task.run(t.tasks).mark()}),n.task.run(c),s()},250);l().forEach(m),h=setInterval(function(){var t=l(),a=Object.keys(d),i=n.util._.difference(t,a);i.forEach(function(n){p("added",n),m(n)});var s=n.util._.difference(a,t);s.forEach(function(n){p("deleted",n),b(n)}),t.forEach(function(t){if(n.file.exists(t)){var a=+e.statSync(t).mtime;if(a===r[t])return;r[t]=a,p("changed",t)}})},200)})};