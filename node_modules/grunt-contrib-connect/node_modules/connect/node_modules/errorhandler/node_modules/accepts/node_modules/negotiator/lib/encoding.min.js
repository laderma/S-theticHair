function parseAcceptEncoding(e){for(var n=e.split(","),t=!1,r=1,i=0,a=0;i<n.length;i++){var o=parseEncoding(n[i].trim(),i);o&&(n[a++]=o,t=t||specify("identity",o),r=Math.min(r,o.q||1))}return t||(n[a++]={encoding:"identity",q:r,i:i}),n.length=a,n}function parseEncoding(e,n){var t=e.match(/^\s*(\S+?)\s*(?:;(.*))?$/);if(!t)return null;var r=t[1],i=1;if(t[2])for(var a=t[2].split(";"),n=0;n<a.length;n++){var o=a[n].trim().split("=");if("q"===o[0]){i=parseFloat(o[1]);break}}return{encoding:r,q:i,i:n}}function getEncodingPriority(e,n,t){for(var r={o:-1,q:0,s:0},i=0;i<n.length;i++){var a=specify(e,n[i],t);a&&(r.s-a.s||r.q-a.q||r.o-a.o)<0&&(r=a)}return r}function specify(e,n,t){var r=0;if(n.encoding.toLowerCase()===e.toLowerCase())r|=1;else if("*"!==n.encoding)return null;return{i:t,o:n.i,q:n.q,s:r}}function preferredEncodings(e,n){var t=parseAcceptEncoding(e||"");if(!n)return t.filter(isQuality).sort(compareSpecs).map(function(e){return e.encoding});var r=n.map(function(e,n){return getEncodingPriority(e,t,n)});return r.filter(isQuality).sort(compareSpecs).map(function(e){return n[r.indexOf(e)]})}function compareSpecs(e,n){return n.q-e.q||n.s-e.s||e.o-n.o||e.i-n.i||0}function isQuality(e){return e.q>0}module.exports=preferredEncodings,preferredEncodings.preferredEncodings=preferredEncodings;