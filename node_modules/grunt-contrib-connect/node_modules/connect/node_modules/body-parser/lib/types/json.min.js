"use strict";function json(e){function l(e){if(0===e.length)return{};if(a){var n=firstchar(e);if("{"!==n&&"["!==n)throw debug("strict violation"),new Error("invalid json")}return debug("parse json"),JSON.parse(e,i)}var n=e||{},t="number"!=typeof n.limit?bytes.parse(n.limit||"100kb"):n.limit,r=n.inflate!==!1,i=n.reviver,a=n.strict!==!1,o=n.type||"application/json",s=n.verify||!1;if(s!==!1&&"function"!=typeof s)throw new TypeError("option verify must be function");var u="function"!=typeof o?typeChecker(o):o;return function(e,n,i){if(e._body)return debug("body already parsed"),i();if(e.body=e.body||{},!typeis.hasBody(e))return debug("skip empty body"),i();if(debug("content-type %j",e.headers["content-type"]),!u(e))return debug("skip parsing"),i();var a=getCharset(e)||"utf-8";return"utf-"!==a.substr(0,4)?(debug("invalid charset"),void i(createError(415,'unsupported charset "'+a.toUpperCase()+'"',{charset:a}))):void read(e,n,i,l,debug,{encoding:a,inflate:r,limit:t,verify:s})}}function firstchar(e){var n=firstcharRegExp.exec(e);return n?n[1]:""}function getCharset(e){try{return contentType.parse(e).parameters.charset.toLowerCase()}catch(n){return void 0}}function typeChecker(e){return function(n){return Boolean(typeis(n,e))}}var bytes=require("bytes"),contentType=require("content-type"),createError=require("http-errors"),debug=require("debug")("body-parser:json"),read=require("../read"),typeis=require("type-is");module.exports=json;var firstcharRegExp=/^[\x20\x09\x0a\x0d]*(.)/;