"use strict";function urlencoded(e){function l(e){return e.length?s(e):{}}var n=e||{};void 0===n.extended&&deprecate("undefined extended: provide extended option");var t=n.extended!==!1,r=n.inflate!==!1,i="number"!=typeof n.limit?bytes.parse(n.limit||"100kb"):n.limit,a=n.type||"application/x-www-form-urlencoded",o=n.verify||!1;if(o!==!1&&"function"!=typeof o)throw new TypeError("option verify must be function");var s=t?extendedparser(n):simpleparser(n),u="function"!=typeof a?typeChecker(a):a;return function(e,n,t){if(e._body)return debug("body already parsed"),t();if(e.body=e.body||{},!typeis.hasBody(e))return debug("skip empty body"),t();if(debug("content-type %j",e.headers["content-type"]),!u(e))return debug("skip parsing"),t();var a=getCharset(e)||"utf-8";return"utf-8"!==a?(debug("invalid charset"),void t(createError(415,'unsupported charset "'+a.toUpperCase()+'"',{charset:a}))):void read(e,n,t,l,debug,{debug:debug,encoding:a,inflate:r,limit:i,verify:o})}}function extendedparser(e){var n=void 0!==e.parameterLimit?e.parameterLimit:1e3,t=parser("qs");if(isNaN(n)||1>n)throw new TypeError("option parameterLimit must be a positive number");return isFinite(n)&&(n=0|n),function(e){var r=parameterCount(e,n);if(void 0===r)throw debug("too many parameters"),createError(413,"too many parameters");var i=Math.max(100,r);return debug("parse extended urlencoding"),t(e,{allowDots:!1,allowPrototypes:!0,arrayLimit:i,depth:1/0,parameterLimit:n})}}function getCharset(e){try{return contentType.parse(e).parameters.charset.toLowerCase()}catch(n){return void 0}}function parameterCount(e,n){for(var t=0,r=0;-1!==(r=e.indexOf("&",r));)if(t++,r++,t===n)return void 0;return t}function parser(e){var n=parsers[e];return n?n.parse:(n=parsers[e]=require(e),n.parse)}function simpleparser(e){var n=void 0!==e.parameterLimit?e.parameterLimit:1e3,t=parser("querystring");if(isNaN(n)||1>n)throw new TypeError("option parameterLimit must be a positive number");return isFinite(n)&&(n=0|n),function(e){var r=parameterCount(e,n);if(void 0===r)throw debug("too many parameters"),createError(413,"too many parameters");return debug("parse urlencoding"),t(e,void 0,void 0,{maxKeys:n})}}function typeChecker(e){return function(n){return Boolean(typeis(n,e))}}var bytes=require("bytes"),contentType=require("content-type"),createError=require("http-errors"),debug=require("debug")("body-parser:urlencoded"),deprecate=require("depd")("body-parser"),read=require("../read"),typeis=require("type-is");module.exports=urlencoded;var parsers=Object.create(null);