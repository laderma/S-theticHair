"use strict";function Utf16BECodec(){}function Utf16BEEncoder(){}function Utf16BEDecoder(){this.overflowByte=-1}function Utf16Codec(e,n){this.iconv=n}function Utf16Encoder(e,n){e=e||{},void 0===e.addBOM&&(e.addBOM=!0),this.encoder=n.iconv.getEncoder("utf-16le",e)}function Utf16Decoder(e,n){this.decoder=null,this.initialBytes=[],this.initialBytesLen=0,this.options=e||{},this.iconv=n.iconv}function detectEncoding(e,n){var t=n||"utf-16le";if(e.length>=2)if(254==e[0]&&255==e[1])t="utf-16be";else if(255==e[0]&&254==e[1])t="utf-16le";else{for(var r=0,i=0,a=Math.min(e.length-e.length%2,64),o=0;a>o;o+=2)0===e[o]&&0!==e[o+1]&&i++,0!==e[o]&&0===e[o+1]&&r++;i>r?t="utf-16be":r>i&&(t="utf-16le")}return t}exports.utf16be=Utf16BECodec,Utf16BECodec.prototype.encoder=Utf16BEEncoder,Utf16BECodec.prototype.decoder=Utf16BEDecoder,Utf16BECodec.prototype.bomAware=!0,Utf16BEEncoder.prototype.write=function(e){for(var n=new Buffer(e,"ucs2"),t=0;t<n.length;t+=2){var r=n[t];n[t]=n[t+1],n[t+1]=r}return n},Utf16BEEncoder.prototype.end=function(){},Utf16BEDecoder.prototype.write=function(e){if(0==e.length)return"";var n=new Buffer(e.length+1),t=0,r=0;for(-1!==this.overflowByte&&(n[0]=e[0],n[1]=this.overflowByte,t=1,r=2);t<e.length-1;t+=2,r+=2)n[r]=e[t+1],n[r+1]=e[t];return this.overflowByte=t==e.length-1?e[e.length-1]:-1,n.slice(0,r).toString("ucs2")},Utf16BEDecoder.prototype.end=function(){},exports.utf16=Utf16Codec,Utf16Codec.prototype.encoder=Utf16Encoder,Utf16Codec.prototype.decoder=Utf16Decoder,Utf16Encoder.prototype.write=function(e){return this.encoder.write(e)},Utf16Encoder.prototype.end=function(){return this.encoder.end()},Utf16Decoder.prototype.write=function(e){if(!this.decoder){if(this.initialBytes.push(e),this.initialBytesLen+=e.length,this.initialBytesLen<16)return"";var e=Buffer.concat(this.initialBytes),n=detectEncoding(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(n,this.options),this.initialBytes.length=this.initialBytesLen=0}return this.decoder.write(e)},Utf16Decoder.prototype.end=function(){if(!this.decoder){var e=Buffer.concat(this.initialBytes),n=detectEncoding(e,this.options.defaultEncoding);this.decoder=this.iconv.getDecoder(n,this.options);var t=this.decoder.write(e),r=this.decoder.end();return r?t+r:t}return this.decoder.end()};