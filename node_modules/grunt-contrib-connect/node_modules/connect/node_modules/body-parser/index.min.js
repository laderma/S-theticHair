"use strict";function bodyParser(e){var n={};if(e)for(var t in e)"type"!==t&&(n[t]=e[t]);var r=exports.urlencoded(n),a=exports.json(n);return function(e,n,t){a(e,n,function(a){return a?t(a):void r(e,n,t)})}}function createParserGetter(e){return function(){return loadParser(e)}}function loadParser(e){var n=parsers[e];if(void 0!==n)return n;switch(e){case"json":n=require("./lib/types/json");break;case"raw":n=require("./lib/types/raw");break;case"text":n=require("./lib/types/text");break;case"urlencoded":n=require("./lib/types/urlencoded")}return parsers[e]=n}var deprecate=require("depd")("body-parser"),parsers=Object.create(null);exports=module.exports=deprecate["function"](bodyParser,"bodyParser: use individual json/urlencoded middlewares"),Object.defineProperty(exports,"json",{configurable:!0,enumerable:!0,get:createParserGetter("json")}),Object.defineProperty(exports,"raw",{configurable:!0,enumerable:!0,get:createParserGetter("raw")}),Object.defineProperty(exports,"text",{configurable:!0,enumerable:!0,get:createParserGetter("text")}),Object.defineProperty(exports,"urlencoded",{configurable:!0,enumerable:!0,get:createParserGetter("urlencoded")});