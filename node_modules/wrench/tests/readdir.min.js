function checkResult(e,n){var t=["bar.txt","foo",path.join("foo","bar"),path.join("foo","dolor.md"),path.join("foo","lorem.txt"),path.join("foo","bar","ipsum.js")];e.deepEqual(n,t),e.done()}var testCase=require("nodeunit").testCase,fs=require("fs"),wrench=require("../lib/wrench"),path=require("path");module.exports=testCase({test_readdirSyncRecursive:function(e){var n=path.join(__dirname,"readdir");e.ok(fs.existsSync(n),"Folders should exist");var t=wrench.readdirSyncRecursive(n);checkResult(e,t)},test_readdirRecursive:function(e){var n=path.join(__dirname,"readdir");e.ok(fs.existsSync(n),"Folders should exist");var t=[];wrench.readdirRecursive(n,function(n,r){if(n)throw n;r?t=t.concat(r):checkResult(e,t)})},test_readdirRecursiveWithNonExistentDirectory:function(e){wrench.readdirRecursive("",function(n,t){e.ok(n),e.equal(n.code,"ENOENT"),e.equal(t,null),e.done()})}});