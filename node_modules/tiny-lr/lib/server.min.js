function Server(e){e=this.options=e||{},events.EventEmitter.call(this),e.livereload=e.livereload||path.join(__dirname,"../node_modules/livereload-js/dist/livereload.js"),e.port=parseInt(e.port||35729,10),this.on("GET /",this.index.bind(this)),this.on("GET /changed",this.changed.bind(this)),this.on("POST /changed",this.changed.bind(this)),this.on("GET /livereload.js",this.livereload.bind(this)),this.on("GET /kill",this.close.bind(this)),e.errorListener&&(this.errorListener=e.errorListener),this.clients={},this.configure(e.app)}var fs=require("fs"),qs=require("qs"),path=require("path"),util=require("util"),http=require("http"),https=require("https"),events=require("events"),parse=require("url").parse,debug=require("debug")("tinylr:server"),Client=require("./client"),bodyParser=require("body-parser").json(),queryParser=require("./middleware/query")(),config=require("../package.json");module.exports=Server,util.inherits(Server,events.EventEmitter),Server.prototype.configure=function(e){var n=this;return debug("Configuring %s",e?"connect / express application":"HTTP server"),e?(this.app=e,this.app.listen=function(t,r){r=r||function(){},t!==n.options.port&&(debug("Warn: LiveReload port is not standard (%d). You are listening on %d",n.options.port,t),debug("You'll need to rely on the LiveReload snippet"),debug("> http://feedback.livereload.com/knowledgebase/articles/86180-how-do-i-add-the-script-tag-manually-"));var a=n.server=http.createServer(e);return a.on("upgrade",n.websocketify.bind(n)),a.on("error",function(){n.error.apply(n,arguments)}),a.on("close",n.close.bind(n)),a.listen(t,r)},this):(this.options.key&&this.options.cert||this.options.pfx?this.server=https.createServer(this.options,this.handler.bind(this)):this.server=http.createServer(this.handler.bind(this)),this.server.on("upgrade",this.websocketify.bind(this)),this.server.on("error",function(){n.error.apply(n,arguments)}),this)},Server.prototype.handler=function(e,n,t){var r=this,a="function"==typeof t;return debug("LiveReload handler %s (middleware: %s)",e.url,a?"on":"off"),this.parse(e,n,function(a){return debug("query parsed",e.body,a),a?t(a):void r.handle(e,n,t)}),this},Server.prototype.parse=function(e,n,t){debug("Parse",e.body,e.query),bodyParser(e,n,function(r){return debug("Body parsed",e.body),r?t(r):void queryParser(e,n,t)})},Server.prototype.handle=function(e,n,t){var r=parse(e.url);debug("Request:",e.method,r.href);var a="function"==typeof t,i=e.method+" "+r.pathname,s=this.emit(i,e,n);if(!s){if(a)return t();n.setHeader("Content-Type","application/json"),n.writeHead(404),n.write(JSON.stringify({error:"not_found",reason:"no such route"})),n.end()}},Server.prototype.websocketify=function(e,n,t){var r=this,a=new Client(e,n,t,this.options);this.clients[a.id]=a,debug("New LiveReload connection (id: %s)",a.id),a.on("end",function(){debug("Destroy client %s (url: %s)",a.id,a.url),delete r.clients[a.id]})},Server.prototype.listen=function(e,n,t){e=parseInt(e||35729,10),this.port=e,"function"==typeof n&&(t=n,n=void 0),this.server.listen(e,n,t)},Server.prototype.close=function(e,n){Object.keys(this.clients).forEach(function(e){this.clients[e].close()},this),this.server._handle&&this.server.close(this.emit.bind(this,"close")),n&&n.end()},Server.prototype.error=function(e){return this.errorListener?void this.errorListener(e):(console.error(),console.error("... Uhoh. Got error %s ...",e.message),console.error(e.stack),void("EADDRINUSE"===e.code&&(console.error(),console.error("You already have a server listening on %s",this.port),console.error("You should stop it and try again."),console.error())))},Server.prototype.livereload=function(e,n){n.setHeader("Content-Type","application/javascript"),fs.createReadStream(this.options.livereload).pipe(n)},Server.prototype.changed=function(e,n){var t=this.param("files",e);debug("Changed event (Files: %s)",t.join(" "));var r=this.notifyClients(t);n&&(n.setHeader("Content-Type","application/json"),n.write(JSON.stringify({clients:r,files:t})),n.end())},Server.prototype.notifyClients=function(e){var n=Object.keys(this.clients).map(function(n){var t=this.clients[n];return debug("Reloading client %s (url: %s)",t.id,t.url),t.reload(e),{id:t.id,url:t.url}},this);return n},Server.prototype.param=function(e,n){var t;return n.body&&n.body[e]?t=n.body.files:n.params&&n.params[e]?t=n.params.files:n.query&&n.query[e]&&(t=n.query.files),t=Array.isArray(t)?t:"string"==typeof t?t.split(/[\s,]/):[],debug("param %s",e,n.body,n.params,n.query,t),t},Server.prototype.index=function(e,n){n.setHeader("Content-Type","application/json"),n.write(JSON.stringify({tinylr:"Welcome",version:config.version})),n.end()};