var request=require("supertest"),assert=require("assert"),Server=require("..").Server,listen=require("./helpers/listen");describe("tiny-lr",function(){before(listen()),describe("GET /",function(){it("respond with nothing, but respond",function(e){request(this.server).get("/").expect("Content-Type",/json/).expect(/\{"tinylr":"Welcome","version":"[\d].[\d].[\d]+"\}/).expect(200,e)}),it("unknown route respond with proper 404 and error message",function(e){request(this.server).get("/whatev").expect("Content-Type",/json/).expect('{"error":"not_found","reason":"no such route"}').expect(404,e)})}),describe("GET /changed",function(){it("with no clients, no files",function(e){request(this.server).get("/changed").expect("Content-Type",/json/).expect(/"clients":\[\]/).expect(/"files":\[\]/).expect(200,e)}),it("with no clients, some files",function(e){request(this.server).get("/changed?files=gonna.css,test.css,it.css").expect("Content-Type",/json/).expect('{"clients":[],"files":["gonna.css","test.css","it.css"]}').expect(200,e)})}),describe("POST /changed",function(){it("with no clients, no files",function(e){request(this.server).post("/changed").expect("Content-Type",/json/).expect(/"clients":\[\]/).expect(/"files":\[\]/).expect(200,e)}),it("with no clients, some files",function(e){var n={clients:[],files:["cat.css","sed.css","ack.js"]};request(this.server).post("/changed").send({files:n.files}).expect("Content-Type",/json/).expect(JSON.stringify(n)).expect(200,e)})}),describe("GET /livereload.js",function(){it("respond with livereload script",function(e){request(this.server).get("/livereload.js").expect(/LiveReload/).expect(200,e)})}),describe("GET /kill",function(){it("shutdown the server",function(e){var n=this.server;request(n).get("/kill").expect(200,function(t){return t?e(t):(assert.ok(!n._handle),void e())})})})});