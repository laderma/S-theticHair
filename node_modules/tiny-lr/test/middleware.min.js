function suite(e,n){return function(){before(function(){this.app=n,this.lr=new Server,this.app.use(this.lr.handler.bind(this.lr)),this.server=http.createServer(this.app),debug("Start %s suite, listen on %d",e,port),this.server.listen(port)}),after(function(e){this.server.close(e)}),describe("GET /",function(){it("respond with nothing, but respond",function(e){request(this.server).get("/").expect("Content-Type",/json/).expect(/\{"tinylr":"Welcome","version":"[\d].[\d].[\d]+"\}/).expect(200,e)}),it("unknown route are noop with middlewares, next-ing",function(e){request(this.server).get("/whatev").expect("Content-Type",/text\/html/).expect(/Cannot GET \/whatev/).expect(404,e)})}),describe("GET /changed",function(){it("with no clients, no files",function(e){request(this.server).get("/changed").expect("Content-Type",/json/).expect(/"clients":\[\]/).expect(/"files":\[\]/).expect(200,e)}),it("with no clients, some files",function(e){request(this.server).get("/changed?files=gonna.css,test.css,it.css").expect("Content-Type",/json/).expect('{"clients":[],"files":["gonna.css","test.css","it.css"]}').expect(200,e)})}),describe("POST /changed",function(){it("with no clients, no files",function(e){request(this.server).post("/changed").expect("Content-Type",/json/).expect(/"clients":\[\]/).expect(/"files":\[\]/).expect(200,e)}),it("with no clients, some files",function(e){var n={clients:[],files:["cat.css","sed.css","ack.js"]};request(this.server).post("/changed").send({files:n.files}).expect("Content-Type",/json/).expect(200,e)})}),describe("GET /livereload.js",function(){it("respond with livereload script",function(e){request(this.server).get("/livereload.js").expect(/LiveReload/).expect(200,e)})}),describe("GET /kill",function(){it("shutdown the server",function(e){var n=this.server;request(n).get("/kill").expect(200,e)})})}}var http=require("http"),assert=require("assert"),connect=require("connect"),express=require("express"),request=require("supertest"),debug=require("debug")("tinylr:test"),Server=require("..").Server,npmenv=process.env,port=parseInt(process.env.npm_package_config_test_port||0,10);describe("Express Middleware",suite("Express Middleware",express()));