function IconvLiteEncoderStream(e,n){this.conv=e,n=n||{},n.decodeStrings=!1,Transform.call(this,n)}function IconvLiteDecoderStream(e,n){this.conv=e,n=n||{},n.encoding=this.encoding="utf8",Transform.call(this,n)}var Transform=require("stream").Transform;module.exports=function(e){e.encodeStream=function(n,t){return new IconvLiteEncoderStream(e.getCodec(n).encoder(t),t)},e.decodeStream=function(n,t){return new IconvLiteDecoderStream(e.getCodec(n).decoder(t),t)},e.supportsStreams=!0,e.IconvLiteEncoderStream=IconvLiteEncoderStream,e.IconvLiteDecoderStream=IconvLiteDecoderStream,e._collect=IconvLiteDecoderStream.prototype.collect},IconvLiteEncoderStream.prototype=Object.create(Transform.prototype,{constructor:{value:IconvLiteEncoderStream}}),IconvLiteEncoderStream.prototype._transform=function(e,n,t){if("string"!=typeof e)return t(new Error("Iconv encoding stream needs strings as its input."));try{var r=this.conv.write(e);r&&r.length&&this.push(r),t()}catch(i){t(i)}},IconvLiteEncoderStream.prototype._flush=function(e){try{var n=this.conv.end();n&&n.length&&this.push(n),e()}catch(t){e(t)}},IconvLiteEncoderStream.prototype.collect=function(e){var n=[];return this.on("error",e),this.on("data",function(e){n.push(e)}),this.on("end",function(){e(null,Buffer.concat(n))}),this},IconvLiteDecoderStream.prototype=Object.create(Transform.prototype,{constructor:{value:IconvLiteDecoderStream}}),IconvLiteDecoderStream.prototype._transform=function(e,n,t){if(!Buffer.isBuffer(e))return t(new Error("Iconv decoding stream needs buffers as its input."));try{var r=this.conv.write(e);r&&r.length&&this.push(r,this.encoding),t()}catch(i){t(i)}},IconvLiteDecoderStream.prototype._flush=function(e){try{var n=this.conv.end();n&&n.length&&this.push(n,this.encoding),e()}catch(t){e(t)}},IconvLiteDecoderStream.prototype.collect=function(e){var n="";return this.on("error",e),this.on("data",function(e){n+=e}),this.on("end",function(){e(null,n)}),this};