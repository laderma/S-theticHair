(function(){var e,n,t,r,a,i;i=require("./protocol"),r=i.Parser,n=i.PROTOCOL_6,t=i.PROTOCOL_7,a="2.2.2",exports.Connector=e=function(){function e(e,n,t,a){this.options=e,this.WebSocket=n,this.Timer=t,this.handlers=a,this._uri="ws"+(this.options.https?"s":"")+"://"+this.options.host+":"+this.options.port+"/livereload",this._nextDelay=this.options.mindelay,this._connectionDesired=!1,this.protocol=0,this.protocolParser=new r({connected:function(e){return function(n){return e.protocol=n,e._handshakeTimeout.stop(),e._nextDelay=e.options.mindelay,e._disconnectionReason="broken",e.handlers.connected(n)}}(this),error:function(e){return function(n){return e.handlers.error(n),e._closeOnError()}}(this),message:function(e){return function(n){return e.handlers.message(n)}}(this)}),this._handshakeTimeout=new t(function(e){return function(){return e._isSocketConnected()?(e._disconnectionReason="handshake-timeout",e.socket.close()):void 0}}(this)),this._reconnectTimer=new t(function(e){return function(){return e._connectionDesired?e.connect():void 0}}(this)),this.connect()}return e.prototype._isSocketConnected=function(){return this.socket&&this.socket.readyState===this.WebSocket.OPEN},e.prototype.connect=function(){return this._connectionDesired=!0,this._isSocketConnected()?void 0:(this._reconnectTimer.stop(),this._disconnectionReason="cannot-connect",this.protocolParser.reset(),this.handlers.connecting(),this.socket=new this.WebSocket(this._uri),this.socket.onopen=function(e){return function(n){return e._onopen(n)}}(this),this.socket.onclose=function(e){return function(n){return e._onclose(n)}}(this),this.socket.onmessage=function(e){return function(n){return e._onmessage(n)}}(this),this.socket.onerror=function(e){return function(n){return e._onerror(n)}}(this))},e.prototype.disconnect=function(){return this._connectionDesired=!1,this._reconnectTimer.stop(),this._isSocketConnected()?(this._disconnectionReason="manual",this.socket.close()):void 0},e.prototype._scheduleReconnection=function(){return this._connectionDesired?this._reconnectTimer.running?void 0:(this._reconnectTimer.start(this._nextDelay),this._nextDelay=Math.min(this.options.maxdelay,2*this._nextDelay)):void 0},e.prototype.sendCommand=function(e){return null!=this.protocol?this._sendCommand(e):void 0},e.prototype._sendCommand=function(e){return this.socket.send(JSON.stringify(e))},e.prototype._closeOnError=function(){return this._handshakeTimeout.stop(),this._disconnectionReason="error",this.socket.close()},e.prototype._onopen=function(e){var r;return this.handlers.socketConnected(),this._disconnectionReason="handshake-failed",r={command:"hello",protocols:[n,t]},r.ver=a,this.options.ext&&(r.ext=this.options.ext),this.options.extver&&(r.extver=this.options.extver),this.options.snipver&&(r.snipver=this.options.snipver),this._sendCommand(r),this._handshakeTimeout.start(this.options.handshake_timeout)},e.prototype._onclose=function(e){return this.protocol=0,this.handlers.disconnected(this._disconnectionReason,this._nextDelay),this._scheduleReconnection()},e.prototype._onerror=function(e){},e.prototype._onmessage=function(e){return this.protocolParser.process(e.data)},e}()}).call(this);