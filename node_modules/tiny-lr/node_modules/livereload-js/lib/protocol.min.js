(function(){var e,n,t,r,a=[].indexOf||function(e){for(var n=0,t=this.length;t>n;n++)if(n in this&&this[n]===e)return n;return-1};exports.PROTOCOL_6=e="http://livereload.com/protocols/official-6",exports.PROTOCOL_7=n="http://livereload.com/protocols/official-7",exports.ProtocolError=r=function(){function e(e,n){this.message="LiveReload protocol error ("+e+') after receiving data: "'+n+'".'}return e}(),exports.Parser=t=function(){function t(e){this.handlers=e,this.reset()}return t.prototype.reset=function(){return this.protocol=null},t.prototype.process=function(t){var i,o,s,u,l;try{if(null==this.protocol){if(t.match(/^!!ver:([\d.]+)$/))this.protocol=6;else if(s=this._parseMessage(t,["hello"])){if(!s.protocols.length)throw new r("no protocols specified in handshake message");if(a.call(s.protocols,n)>=0)this.protocol=7;else{if(!(a.call(s.protocols,e)>=0))throw new r("no supported protocols found");this.protocol=6}}return this.handlers.connected(this.protocol)}if(6===this.protocol){if(s=JSON.parse(t),!s.length)throw new r("protocol 6 messages must be arrays");if(i=s[0],u=s[1],"refresh"!==i)throw new r("unknown protocol 6 command");return this.handlers.message({command:"reload",path:u.path,liveCSS:null!=(l=u.apply_css_live)?l:!0})}return s=this._parseMessage(t,["reload","alert"]),this.handlers.message(s)}catch(c){if(o=c,o instanceof r)return this.handlers.error(o);throw o}},t.prototype._parseMessage=function(e,n){var t,i,o;try{i=JSON.parse(e)}catch(s){throw t=s,new r("unparsable JSON",e)}if(!i.command)throw new r('missing "command" key',e);if(o=i.command,a.call(n,o)<0)throw new r("invalid command '"+i.command+"', only valid commands are: "+n.join(", ")+")",e);return i},t}()}).call(this);