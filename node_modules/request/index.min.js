function initParams(n,e,a){return"function"!=typeof e||a||(a=e),e&&"object"==typeof e?e.uri=n:"string"==typeof n?e={uri:n}:(e=n,n=e.uri),{uri:n,options:e,callback:a}}function request(n,e,a){if("undefined"==typeof n)throw new Error("undefined is not a valid uri or options object.");"function"!=typeof e||a||(a=e),e&&"object"==typeof e?e.uri=n:e="string"==typeof n?{uri:n}:n,e=copy(e),a&&(e.callback=a);var r=new Request(e);return r}function requester(n){return"function"==typeof n.options._requester?n.options._requester:request}var optional=require("./lib/optional"),cookie=optional("tough-cookie"),Cookie=cookie&&cookie.Cookie,CookieJar=cookie&&cookie.CookieJar,cookieJar=CookieJar&&new CookieJar,copy=require("./lib/copy"),Request=require("./request");module.exports=request,request.Request=Request,request.debug=process.env.NODE_DEBUG&&/request/.test(process.env.NODE_DEBUG),request.initParams=initParams,request.defaults=function(n,e){var a=function(a){var r=function(r,t,i){var s=initParams(r,t,i);for(var l in n)void 0===s.options[l]&&(s.options[l]=n[l]);return"function"==typeof e&&(a===request?a=e:s.options._requester=e),a(s.options,s.callback)};return r},r=a(request);return r.get=a(request.get),r.patch=a(request.patch),r.post=a(request.post),r.put=a(request.put),r.head=a(request.head),r.del=a(request.del),r.cookie=a(request.cookie),r.jar=request.jar,r},request.forever=function(n,e){var a={};if(e)for(var r in e)a[r]=e[r];return n&&(a.agentOptions=n),a.forever=!0,request.defaults(a)},request.get=request,request.post=function(n,e,a){var r=initParams(n,e,a);return r.options.method="POST",requester(r)(r.uri||null,r.options,r.callback)},request.put=function(n,e,a){var r=initParams(n,e,a);return r.options.method="PUT",requester(r)(r.uri||null,r.options,r.callback)},request.patch=function(n,e,a){var r=initParams(n,e,a);return r.options.method="PATCH",requester(r)(r.uri||null,r.options,r.callback)},request.head=function(n,e,a){var r=initParams(n,e,a);if(r.options.method="HEAD",r.options.body||r.options.requestBodyStream||r.options.json&&"boolean"!=typeof r.options.json||r.options.multipart)throw new Error("HTTP HEAD requests MUST NOT include a request body.");return requester(r)(r.uri||null,r.options,r.callback)},request.del=function(n,e,a){var r=initParams(n,e,a);return r.options.method="DELETE",requester(r)(r.uri||null,r.options,r.callback)},request.jar=function(){return new CookieJar},request.cookie=function(n){if(n&&n.uri&&(n=n.uri),"string"!=typeof n)throw new Error("The cookie function only accepts STRING as param");return new Cookie(n)};