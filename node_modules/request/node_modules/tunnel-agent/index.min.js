"use strict";function httpOverHttp(e){var n=new TunnelingAgent(e);return n.request=http.request,n}function httpsOverHttp(e){var n=new TunnelingAgent(e);return n.request=http.request,n.createSocket=createSecureSocket,n}function httpOverHttps(e){var n=new TunnelingAgent(e);return n.request=https.request,n}function httpsOverHttps(e){var n=new TunnelingAgent(e);return n.request=https.request,n.createSocket=createSecureSocket,n}function TunnelingAgent(e){var n=this;n.options=e||{},n.proxyOptions=n.options.proxy||{},n.maxSockets=n.options.maxSockets||http.Agent.defaultMaxSockets,n.requests=[],n.sockets=[],n.on("free",function(e,t,r){for(var a=0,i=n.requests.length;i>a;++a){var s=n.requests[a];if(s.host===t&&s.port===r)return n.requests.splice(a,1),void s.request.onSocket(e)}e.destroy(),n.removeSocket(e)})}function createSecureSocket(e,n){var t=this;TunnelingAgent.prototype.createSocket.call(t,e,function(r){var a=tls.connect(0,mergeOptions({},t.options,{servername:e.host,socket:r}));n(a)})}function mergeOptions(e){for(var n=1,t=arguments.length;t>n;++n){var r=arguments[n];if("object"==typeof r)for(var a=Object.keys(r),i=0,s=a.length;s>i;++i){var o=a[i];void 0!==r[o]&&(e[o]=r[o])}}return e}var net=require("net"),tls=require("tls"),http=require("http"),https=require("https"),events=require("events"),assert=require("assert"),util=require("util");exports.httpOverHttp=httpOverHttp,exports.httpsOverHttp=httpsOverHttp,exports.httpOverHttps=httpOverHttps,exports.httpsOverHttps=httpsOverHttps,util.inherits(TunnelingAgent,events.EventEmitter),TunnelingAgent.prototype.addRequest=function(e,n,t){var r=this;return r.sockets.length>=this.maxSockets?void r.requests.push({host:n,port:t,request:e}):void r.createSocket({host:n,port:t,request:e},function(a){function i(){r.emit("free",a,n,t)}function s(e){r.removeSocket(),a.removeListener("free",i),a.removeListener("close",s),a.removeListener("agentRemove",s)}a.on("free",i),a.on("close",s),a.on("agentRemove",s),e.onSocket(a)})},TunnelingAgent.prototype.createSocket=function(e,n){function s(e){e.upgrade=!0}function o(e,n,t){process.nextTick(function(){l(e,n,t)})}function l(a,s,o){if(i.removeAllListeners(),s.removeAllListeners(),200===a.statusCode)assert.equal(o.length,0),debug("tunneling connection has established"),t.sockets[t.sockets.indexOf(r)]=s,n(s);else{debug("tunneling socket could not be established, statusCode=%d",a.statusCode);var l=new Error("tunneling socket could not be established, statusCode="+a.statusCode);l.code="ECONNRESET",e.request.emit("error",l),t.removeSocket(r)}}function u(n){i.removeAllListeners(),debug("tunneling socket could not be established, cause=%s\n",n.message,n.stack);var a=new Error("tunneling socket could not be established, cause="+n.message);a.code="ECONNRESET",e.request.emit("error",a),t.removeSocket(r)}var t=this,r={};t.sockets.push(r);var a=mergeOptions({},t.proxyOptions,{method:"CONNECT",path:e.host+":"+e.port,agent:!1});a.proxyAuth&&(a.headers=a.headers||{},a.headers["Proxy-Authorization"]="Basic "+new Buffer(a.proxyAuth).toString("base64")),debug("making CONNECT request");var i=t.request(a);i.useChunkedEncodingByDefault=!1,i.once("response",s),i.once("upgrade",o),i.once("connect",l),i.once("error",u),i.end()},TunnelingAgent.prototype.removeSocket=function(e){var n=this.sockets.indexOf(e);if(-1!==n){this.sockets.splice(n,1);var t=this.requests.shift();t&&this.createSocket(t,function(e){t.request.onSocket(e)})}};var debug;debug=process.env.NODE_DEBUG&&/\btunnel\b/.test(process.env.NODE_DEBUG)?function(){var e=Array.prototype.slice.call(arguments);"string"==typeof e[0]?e[0]="TUNNEL: "+e[0]:e.unshift("TUNNEL:"),console.error.apply(console,e)}:function(){},exports.debug=debug;