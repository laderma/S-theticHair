function dateVows(e){var n={};Object.keys(e).forEach(function(t){var r=e[t];n[t]=function(){var e=tough.parseDate(t)?"valid":"invalid";assert.equal(e,r?"valid":"invalid")}});return{"date parsing":n}}function matchVows(e,n){var t={};return n.forEach(function(n){var r=n[0],a=n[1],i=n[2],s=r+(i?" matches ":" doesn't match ")+a;t[s]=function(){assert.equal(e(r,a),i)}}),t}function defaultPathVows(e){var n={};return e.forEach(function(e){var t=e[0],r=e[1],a=t+" gives "+r;n[a]=function(){assert.equal(tough.defaultPath(t),r)}}),n}function at(e){return{now:new Date(atNow+e)}}var vows=require("vows"),assert=require("assert"),async=require("async"),tough=require("./lib/cookie"),Cookie=tough.Cookie,CookieJar=tough.CookieJar,atNow=Date.now();vows.describe("Cookie Jar").addBatch({"all defined":function(){assert.ok(Cookie),assert.ok(CookieJar)}}).addBatch(dateVows({"Wed, 09 Jun 2021 10:18:14 GMT":!0,"Wed, 09 Jun 2021 22:18:14 GMT":!0,"Tue, 18 Oct 2011 07:42:42.123 GMT":!0,"18 Oct 2011 07:42:42 GMT":!0,"8 Oct 2011 7:42:42 GMT":!0,"8 Oct 2011 7:2:42 GMT":!1,"Oct 18 2011 07:42:42 GMT":!0,"Tue Oct 18 2011 07:05:03 GMT+0000 (GMT)":!0,"09 Jun 2021 10:18:14 GMT":!0,"99 Jix 3038 48:86:72 ZMT":!1,"01 Jan 1970 00:00:00 GMT":!0,"01 Jan 1600 00:00:00 GMT":!1,"01 Jan 1601 00:00:00 GMT":!0,"10 Feb 81 13:00:00 GMT":!0,"Thu, 01 Jan 1970 00:00:010 GMT":!0,"Thu, 17-Apr-2014 02:12:29 GMT":!0,"Thu, 17-Apr-2014 02:12:29 UTC":!0})).addBatch({"strict date parse of Thu, 01 Jan 1970 00:00:010 GMT":{topic:function(){return tough.parseDate("Thu, 01 Jan 1970 00:00:010 GMT",!0)?!0:!1},invalid:function(e){assert.equal(e,!1)}}}).addBatch({formatting:{"a simple cookie":{topic:function(){var e=new Cookie;return e.key="a",e.value="b",e},validates:function(e){assert.ok(e.validate())},"to string":function(e){assert.equal(e.toString(),"a=b")}},"a cookie with spaces in the value":{topic:function(){var e=new Cookie;return e.key="a",e.value="beta gamma",e},"doesn't validate":function(e){assert.ok(!e.validate())},"to string":function(e){assert.equal(e.toString(),'a="beta gamma"')}},"with an empty value and HttpOnly":{topic:function(){var e=new Cookie;return e.key="a",e.httpOnly=!0,e},"to string":function(e){assert.equal(e.toString(),"a=; HttpOnly")}},"with an expiry":{topic:function(){var e=new Cookie;return e.key="a",e.value="b",e.setExpires("Oct 18 2011 07:05:03 GMT"),e},validates:function(e){assert.ok(e.validate())},"to string":function(e){assert.equal(e.toString(),"a=b; Expires=Tue, 18 Oct 2011 07:05:03 GMT")},"to short string":function(e){assert.equal(e.cookieString(),"a=b")}},"with a max-age":{topic:function(){var e=new Cookie;return e.key="a",e.value="b",e.setExpires("Oct 18 2011 07:05:03 GMT"),e.maxAge=12345,e},validates:function(e){assert.ok(e.validate())},"to string":function(e){assert.equal(e.toString(),"a=b; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Max-Age=12345")}},"with a bunch of things":function(){var e=new Cookie;e.key="a",e.value="b",e.setExpires("Oct 18 2011 07:05:03 GMT"),e.maxAge=12345,e.domain="example.com",e.path="/foo",e.secure=!0,e.httpOnly=!0,e.extensions=["MyExtension"],assert.equal(e.toString(),"a=b; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Max-Age=12345; Domain=example.com; Path=/foo; Secure; HttpOnly; MyExtension")},"a host-only cookie":{topic:function(){var e=new Cookie;return e.key="a",e.value="b",e.hostOnly=!0,e.domain="shouldnt-stringify.example.com",e.path="/should-stringify",e},validates:function(e){assert.ok(e.validate())},"to string":function(e){assert.equal(e.toString(),"a=b; Path=/should-stringify")}},"minutes are '10'":{topic:function(){var e=new Cookie;return e.key="a",e.value="b",e.expires=new Date(128411341e4),e},validates:function(e){assert.ok(e.validate())},"to string":function(e){var n=e.toString();assert.notEqual(n,"a=b; Expires=Fri, 010 Sep 2010 010:010:010 GMT"),assert.equal(n,"a=b; Expires=Fri, 10 Sep 2010 10:10:10 GMT")}}}}).addBatch({"TTL with max-age":function(){var e=new Cookie;e.maxAge=123,assert.equal(e.TTL(),123e3),assert.equal(e.expiryTime(new Date(9e6)),9123e3)},"TTL with zero max-age":function(){var e=new Cookie;e.key="a",e.value="b",e.maxAge=0,assert.equal(e.TTL(),0),assert.equal(e.expiryTime(new Date(9e6)),-(1/0)),assert.ok(!e.validate())},"TTL with negative max-age":function(){var e=new Cookie;e.key="a",e.value="b",e.maxAge=-1,assert.equal(e.TTL(),0),assert.equal(e.expiryTime(new Date(9e6)),-(1/0)),assert.ok(!e.validate())},"TTL with max-age and expires":function(){var e=new Cookie;e.maxAge=123,e.expires=new Date(Date.now()+9e3),assert.equal(e.TTL(),123e3),assert.ok(e.isPersistent())},"TTL with expires":function(){var e=new Cookie,n=Date.now();e.expires=new Date(n+9e3),assert.equal(e.TTL(n),9e3),assert.equal(e.expiryTime(),e.expires.getTime())},"TTL with old expires":function(){var e=new Cookie;e.setExpires("17 Oct 2010 00:00:00 GMT"),assert.ok(e.TTL()<0),assert.ok(e.isPersistent())},"default TTL":{topic:function(){return new Cookie},"is Infinite-future":function(e){assert.equal(e.TTL(),1/0)},"is a 'session' cookie":function(e){assert.ok(!e.isPersistent())}}}).addBatch({Parsing:{simple:{topic:function(){return Cookie.parse("a=bcd",!0)||null},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"a")},value:function(e){assert.equal(e.value,"bcd")},"no path":function(e){assert.equal(e.path,null)},"no domain":function(e){assert.equal(e.domain,null)},"no extensions":function(e){assert.ok(!e.extensions)}},"with expiry":{topic:function(){return Cookie.parse("a=bcd; Expires=Tue, 18 Oct 2011 07:05:03 GMT",!0)||null},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"a")},value:function(e){assert.equal(e.value,"bcd")},"has expires":function(e){assert.ok(e.expires!==1/0,"expiry is infinite when it shouldn't be"),assert.equal(e.expires.getTime(),1318921503e3)}},"with expiry and path":{topic:function(){return Cookie.parse('abc="xyzzy!"; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Path=/aBc',!0)||null},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"abc")},value:function(e){assert.equal(e.value,"xyzzy!")},"has expires":function(e){assert.ok(e.expires!==1/0,"expiry is infinite when it shouldn't be"),assert.equal(e.expires.getTime(),1318921503e3)},"has path":function(e){assert.equal(e.path,"/aBc")},"no httponly or secure":function(e){assert.ok(!e.httpOnly),assert.ok(!e.secure)}},"with everything":{topic:function(){return Cookie.parse('abc="xyzzy!"; Expires=Tue, 18 Oct 2011 07:05:03 GMT; Path=/aBc; Domain=example.com; Secure; HTTPOnly; Max-Age=1234; Foo=Bar; Baz',!0)||null},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"abc")},value:function(e){assert.equal(e.value,"xyzzy!")},"has expires":function(e){assert.ok(e.expires!==1/0,"expiry is infinite when it shouldn't be"),assert.equal(e.expires.getTime(),1318921503e3)},"has path":function(e){assert.equal(e.path,"/aBc")},"has domain":function(e){assert.equal(e.domain,"example.com")},"has httponly":function(e){assert.equal(e.httpOnly,!0)},"has secure":function(e){assert.equal(e.secure,!0)},"has max-age":function(e){assert.equal(e.maxAge,1234)},"has extensions":function(e){assert.ok(e.extensions),assert.equal(e.extensions[0],"Foo=Bar"),assert.equal(e.extensions[1],"Baz")}},"invalid expires":{strict:function(){assert.ok(!Cookie.parse("a=b; Expires=xyzzy",!0))},"non-strict":function(){var e=Cookie.parse("a=b; Expires=xyzzy");assert.ok(e),assert.equal(e.expires,1/0)}},"zero max-age":{strict:function(){assert.ok(!Cookie.parse("a=b; Max-Age=0",!0))},"non-strict":function(){var e=Cookie.parse("a=b; Max-Age=0");assert.ok(e),assert.equal(e.maxAge,0)}},"negative max-age":{strict:function(){assert.ok(!Cookie.parse("a=b; Max-Age=-1",!0))},"non-strict":function(){var e=Cookie.parse("a=b; Max-Age=-1");assert.ok(e),assert.equal(e.maxAge,-1)}},"empty domain":{strict:function(){assert.ok(!Cookie.parse("a=b; domain=",!0))},"non-strict":function(){var e=Cookie.parse("a=b; domain=");assert.ok(e),assert.equal(e.domain,null)}},"dot domain":{strict:function(){assert.ok(!Cookie.parse("a=b; domain=.",!0))},"non-strict":function(){var e=Cookie.parse("a=b; domain=.");assert.ok(e),assert.equal(e.domain,null)}},"uppercase domain":{"strict lowercases":function(){var e=Cookie.parse("a=b; domain=EXAMPLE.COM");assert.ok(e),assert.equal(e.domain,"example.com")},"non-strict lowercases":function(){var e=Cookie.parse("a=b; domain=EXAMPLE.COM");assert.ok(e),assert.equal(e.domain,"example.com")}},"trailing dot in domain":{topic:function(){return Cookie.parse("a=b; Domain=example.com.",!0)||null},"has the domain":function(e){assert.equal(e.domain,"example.com.")},"but doesn't validate":function(e){assert.equal(e.validate(),!1)}},"empty path":{strict:function(){assert.ok(!Cookie.parse("a=b; path=",!0))},"non-strict":function(){var e=Cookie.parse("a=b; path=");assert.ok(e),assert.equal(e.path,null)}},"no-slash path":{strict:function(){assert.ok(!Cookie.parse("a=b; path=xyzzy",!0))},"non-strict":function(){var e=Cookie.parse("a=b; path=xyzzy");assert.ok(e),assert.equal(e.path,null)}},"trailing semi-colons after path":{topic:function(){return["a=b; path=/;","c=d;;;;"]},strict:function(e){assert.ok(!Cookie.parse(e[0],!0)),assert.ok(!Cookie.parse(e[1],!0))},"non-strict":function(e){var n=Cookie.parse(e[0]),t=Cookie.parse(e[1]);assert.ok(n),assert.ok(t),assert.equal(n.path,"/")}},"secure-with-value":{strict:function(){assert.ok(!Cookie.parse("a=b; Secure=xyzzy",!0))},"non-strict":function(){var e=Cookie.parse("a=b; Secure=xyzzy");assert.ok(e),assert.equal(e.secure,!0)}},"httponly-with-value":{strict:function(){assert.ok(!Cookie.parse("a=b; HttpOnly=xyzzy",!0))},"non-strict":function(){var e=Cookie.parse("a=b; HttpOnly=xyzzy");assert.ok(e),assert.equal(e.httpOnly,!0)}},garbage:{topic:function(){return Cookie.parse("\b",!0)||null},"doesn't parse":function(e){assert.equal(e,null)}},"public suffix domain":{topic:function(){return Cookie.parse("a=b; domain=kyoto.jp",!0)||null},"parses fine":function(e){assert.ok(e),assert.equal(e.domain,"kyoto.jp")},"but fails validation":function(e){assert.ok(e),assert.ok(!e.validate())}},"Ironically, Google 'GAPS' cookie has very little whitespace":{topic:function(){return Cookie.parse("GAPS=1:A1aaaaAaAAa1aaAaAaaAAAaaa1a11a:aaaAaAaAa-aaaA1-;Path=/;Expires=Thu, 17-Apr-2014 02:12:29 GMT;Secure;HttpOnly")},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"GAPS")},value:function(e){assert.equal(e.value,"1:A1aaaaAaAAa1aaAaAaaAAAaaa1a11a:aaaAaAaAa-aaaA1-")},path:function(e){assert.notEqual(e.path,"/;Expires"),assert.equal(e.path,"/")},expires:function(e){assert.notEqual(e.expires,1/0),assert.equal(e.expires.getTime(),1397700749e3)},secure:function(e){assert.ok(e.secure)},httponly:function(e){assert.ok(e.httpOnly)}},"lots of equal signs":{topic:function(){return Cookie.parse("queryPref=b=c&d=e; Path=/f=g; Expires=Thu, 17 Apr 2014 02:12:29 GMT; HttpOnly")},parsed:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"queryPref")},value:function(e){assert.equal(e.value,"b=c&d=e")},path:function(e){assert.equal(e.path,"/f=g")},expires:function(e){assert.notEqual(e.expires,1/0),assert.equal(e.expires.getTime(),1397700749e3)},httponly:function(e){assert.ok(e.httpOnly)}}}}).addBatch({"domain normalization":{simple:function(){var e=new Cookie;e.domain="EXAMPLE.com",assert.equal(e.canonicalizedDomain(),"example.com")},"extra dots":function(){var e=new Cookie;e.domain=".EXAMPLE.com",assert.equal(e.cdomain(),"example.com")},"weird trailing dot":function(){var e=new Cookie;e.domain="EXAMPLE.ca.",assert.equal(e.canonicalizedDomain(),"example.ca.")},"weird internal dots":function(){var e=new Cookie;e.domain="EXAMPLE...ca.",assert.equal(e.canonicalizedDomain(),"example...ca.")},IDN:function(){var e=new Cookie;e.domain="δοκιμή.δοκιμή",assert.equal(e.canonicalizedDomain(),"xn--jxalpdlp.xn--jxalpdlp")}}}).addBatch({"Domain Match":matchVows(tough.domainMatch,[["example.com","example.com",!0],["eXaMpLe.cOm","ExAmPlE.CoM",!0],["no.ca","yes.ca",!1],["wwwexample.com","example.com",!1],["www.example.com","example.com",!0],["example.com","www.example.com",!1],["www.subdom.example.com","example.com",!0],["www.subdom.example.com","subdom.example.com",!0],["example.com","example.com.",!1],["192.168.0.1","168.0.1",!1],[null,"example.com",null],["example.com",null,null],[null,null,null],[void 0,void 0,null]])}).addBatch({"default-path":defaultPathVows([[null,"/"],["/","/"],["/file","/"],["/dir/file","/dir"],["noslash","/"]])}).addBatch({"Path-Match":matchVows(tough.pathMatch,[["/","/",!0],["/dir","/",!0],["/","/dir",!1],["/dir/","/dir/",!0],["/dir/file","/dir/",!0],["/dir/file","/dir",!0],["/directory","/dir",!1]])}).addBatch({"Cookie Sorting":{topic:function(){var e=[],n=Date.now();e.push(Cookie.parse("a=0; Domain=example.com")),e.push(Cookie.parse("b=1; Domain=www.example.com")),e.push(Cookie.parse("c=2; Domain=example.com; Path=/pathA")),e.push(Cookie.parse("d=3; Domain=www.example.com; Path=/pathA")),e.push(Cookie.parse("e=4; Domain=example.com; Path=/pathA/pathB")),e.push(Cookie.parse("f=5; Domain=www.example.com; Path=/pathA/pathB"));var t=e.length;return e.forEach(function(e){e.creation=new Date(n-100*t--)}),e=e.sort(function(){return Math.random()-.5}),e=e.sort(tough.cookieCompare)},got:function(e){assert.lengthOf(e,6);var n=e.map(function(e){return e.key});assert.deepEqual(n,["e","f","c","d","a","b"])}}}).addBatch({CookieJar:{"Setting a basic cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=example.com; Path=/");assert.strictEqual(n.hostOnly,null),assert.instanceOf(n.creation,Date),assert.strictEqual(n.lastAccessed,null),n.creation=new Date(Date.now()-1e4),e.setCookie(n,"http://example.com/index.html",this.callback)},works:function(e){assert.instanceOf(e,Cookie)},"gets timestamped":function(e){assert.ok(e.creation),assert.ok(Date.now()-e.creation.getTime()<5e3),assert.ok(e.lastAccessed),assert.equal(e.creation,e.lastAccessed),assert.equal(e.TTL(),1/0),assert.ok(!e.isPersistent())}},"Setting a no-path cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=example.com");assert.strictEqual(n.hostOnly,null),assert.instanceOf(n.creation,Date),assert.strictEqual(n.lastAccessed,null),n.creation=new Date(Date.now()-1e4),e.setCookie(n,"http://example.com/index.html",this.callback)},domain:function(e){assert.equal(e.domain,"example.com")},"path is /":function(e){assert.equal(e.path,"/")},"path was derived":function(e){assert.strictEqual(e.pathIsDefault,!0)}},"Setting a cookie already marked as host-only":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=example.com");assert.strictEqual(n.hostOnly,null),assert.instanceOf(n.creation,Date),assert.strictEqual(n.lastAccessed,null),n.creation=new Date(Date.now()-1e4),n.hostOnly=!0,e.setCookie(n,"http://example.com/index.html",this.callback)},domain:function(e){assert.equal(e.domain,"example.com")},"still hostOnly":function(e){assert.strictEqual(e.hostOnly,!0)}},"Setting a session cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b");assert.strictEqual(n.path,null),e.setCookie(n,"http://www.example.com/dir/index.html",this.callback)},works:function(e){assert.instanceOf(e,Cookie)},"gets the domain":function(e){assert.equal(e.domain,"www.example.com")},"gets the default path":function(e){assert.equal(e.path,"/dir")},"is 'hostOnly'":function(e){assert.ok(e.hostOnly)}},"Setting wrong domain cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=fooxample.com; Path=/");e.setCookie(n,"http://example.com/index.html",this.callback)},fails:function(e,n){assert.ok(e.message.match(/domain/i)),assert.ok(!n)}},"Setting sub-domain cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=www.example.com; Path=/");e.setCookie(n,"http://example.com/index.html",this.callback)},fails:function(e,n){assert.ok(e.message.match(/domain/i)),assert.ok(!n)}},"Setting super-domain cookie":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=example.com; Path=/");e.setCookie(n,"http://www.app.example.com/index.html",this.callback)},success:function(e,n){assert.ok(!e),assert.equal(n.domain,"example.com")}},"Setting HttpOnly cookie over non-HTTP API":{topic:function(){var e=new CookieJar,n=Cookie.parse("a=b; Domain=example.com; Path=/; HttpOnly");e.setCookie(n,"http://example.com/index.html",{http:!1},this.callback)},fails:function(e,n){assert.match(e.message,/HttpOnly/i),assert.ok(!n)}}},"Cookie Jar store eight cookies":{topic:function(){var e=new CookieJar,n="http://example.com/index.html",t=[];t.push(function(t){e.setCookie("a=1; Domain=example.com; Path=/",n,at(0),t)}),t.push(function(t){e.setCookie("b=2; Domain=example.com; Path=/; HttpOnly",n,at(1e3),t)}),t.push(function(t){e.setCookie("c=3; Domain=example.com; Path=/; Secure",n,at(2e3),t)}),t.push(function(t){e.setCookie("d=4; Domain=example.com; Path=/foo",n,at(3e3),t)}),t.push(function(t){e.setCookie("e=5",n,at(4e3),t)}),t.push(function(n){e.setCookie("f=6; Domain=nodejs.org; Path=/","http://nodejs.org",at(5e3),n)}),t.push(function(t){e.setCookie("g=7; Domain=example.com; Path=/; Expires=Tue, 18 Oct 2011 00:00:00 GMT",n,at(6e3),t)}),t.push(function(t){e.setCookie("h=8; Domain=example.com; Path=/; Max-Age=1",n,t)});var r=this.callback;async.parallel(t,function(n,t){setTimeout(function(){r(n,e,t)},2e3)})},"setup ok":function(e,n,t){assert.ok(1)},"then retrieving for http://nodejs.org":{topic:function(e,n){e.getCookies("http://nodejs.org",this.callback)},"get a nodejs cookie":function(e){assert.lengthOf(e,1);var n=e[0];assert.equal(n.domain,"nodejs.org")}},"then retrieving for https://example.com":{topic:function(e,n){e.getCookies("https://example.com",{secure:!0},this.callback)},"get a secure example cookie with others":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["a","b","c","e"])}},"then retrieving for https://example.com (missing options)":{topic:function(e,n){e.getCookies("https://example.com",this.callback)},"get a secure example cookie with others":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["a","b","c","e"])}},"then retrieving for http://example.com":{topic:function(e,n){e.getCookies("http://example.com",this.callback)},"get a bunch of cookies":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["a","b","e"])}},"then retrieving for http://EXAMPlE.com":{topic:function(e,n){e.getCookies("http://EXAMPlE.com",this.callback)},"get a bunch of cookies":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["a","b","e"])}},"then retrieving for http://example.com, non-HTTP":{topic:function(e,n){e.getCookies("http://example.com",{http:!1},this.callback)},"get a bunch of cookies":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["a","e"])}},"then retrieving for http://example.com/foo/bar":{topic:function(e,n){e.getCookies("http://example.com/foo/bar",this.callback)},"get a bunch of cookies":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["d","a","b","e"])}},"then retrieving for http://example.com as a string":{topic:function(e,n){e.getCookieString("http://example.com",this.callback)},"get a single string":function(e){assert.equal(e,"a=1; b=2; e=5")}},"then retrieving for http://example.com as a set-cookie header":{topic:function(e,n){e.getSetCookieStrings("http://example.com",this.callback)},"get a single string":function(e){assert.lengthOf(e,3),assert.equal(e[0],"a=1; Domain=example.com; Path=/"),assert.equal(e[1],"b=2; Domain=example.com; Path=/; HttpOnly"),assert.equal(e[2],"e=5; Path=/")}},"then retrieving for http://www.example.com/":{topic:function(e,n){e.getCookies("http://www.example.com/foo/bar",this.callback)},"get a bunch of cookies":function(e){var n=e.map(function(e){return e.key});assert.deepEqual(n,["d","a","b"])}}},"Repeated names":{topic:function(){var e=this.callback,n=new CookieJar,t="http://www.example.com/",r=n.setCookie,a=[],i=Date.now();a.push(r.bind(n,"aaaa=xxxx",t,at(0))),a.push(r.bind(n,"aaaa=1111; Domain=www.example.com",t,at(1e3))),a.push(r.bind(n,"aaaa=2222; Domain=example.com",t,at(2e3))),a.push(r.bind(n,"aaaa=3333; Domain=www.example.com; Path=/pathA",t,at(3e3))),async.series(a,function(t,r){r=r.filter(function(e){return void 0!==e}),e(t,{cj:n,cookies:r,now:i})})},"all got set":function(e,n){assert.lengthOf(n.cookies,4)},"then getting 'em back":{topic:function(e){var n=e.cj;n.getCookies("http://www.example.com/pathA",this.callback)},"there's just three":function(e,n){var t=n.map(function(e){return e.value});assert.deepEqual(t,["3333","1111","2222"])}}},"CookieJar setCookie errors":{"public-suffix domain":{topic:function(){var e=new CookieJar;e.setCookie("i=9; Domain=kyoto.jp; Path=/","kyoto.jp",this.callback)},errors:function(e,n){assert.ok(e),assert.ok(!n),assert.match(e.message,/public suffix/i)}},"wrong domain":{topic:function(){var e=new CookieJar;e.setCookie("j=10; Domain=google.com; Path=/","google.ca",this.callback)},errors:function(e,n){assert.ok(e),assert.ok(!n),assert.match(e.message,/not in this host's domain/i)}},"old cookie is HttpOnly":{topic:function(){var e=this.callback,n=function(n,r){return e(n,t)},t=new CookieJar;t.setCookie("k=11; Domain=example.ca; Path=/; HttpOnly","http://example.ca",{http:!0},n)},"initial cookie is set":function(e,n){assert.ok(!e)},"but when trying to overwrite":{topic:function(e){var n=this.callback;e.setCookie("k=12; Domain=example.ca; Path=/","http://example.ca",{http:!1},function(e,t){n(null,e)})},"it's an error":function(e){assert.ok(e)},"then, checking the original":{topic:function(e,n){assert.ok(n instanceof CookieJar),n.getCookies("http://example.ca",{http:!0},this.callback)},"cookie has original value":function(e,n){assert.equal(e,null),assert.lengthOf(n,1),assert.equal(n[0].value,11)}}}}}}).addBatch({JSON:{serialization:{topic:function(){var e=Cookie.parse("alpha=beta; Domain=example.com; Path=/foo; Expires=Tue, 19 Jan 2038 03:14:07 GMT; HttpOnly");return JSON.stringify(e)},"gives a string":function(e){assert.equal(typeof e,"string")},"date is in ISO format":function(e){assert.match(e,/"expires":"2038-01-19T03:14:07\.000Z"/,"expires is in ISO format")}},deserialization:{topic:function(){var e='{"key":"alpha","value":"beta","domain":"example.com","path":"/foo","expires":"2038-01-19T03:14:07.000Z","httpOnly":true,"lastAccessed":2000000000123}';return Cookie.fromJSON(e)},works:function(e){assert.ok(e)},key:function(e){assert.equal(e.key,"alpha")},value:function(e){assert.equal(e.value,"beta")},domain:function(e){assert.equal(e.domain,"example.com")},path:function(e){assert.equal(e.path,"/foo")},httpOnly:function(e){assert.strictEqual(e.httpOnly,!0)},secure:function(e){assert.strictEqual(e.secure,!1)},hostOnly:function(e){assert.strictEqual(e.hostOnly,null)},"expires is a date object":function(e){assert.equal(e.expires.getTime(),2147483647e3)},"lastAccessed is a date object":function(e){assert.equal(e.lastAccessed.getTime(),2000000000123)},"creation defaulted":function(e){assert.ok(e.creation.getTime())}},"null deserialization":{topic:function(){return Cookie.fromJSON(null)},"is null":function(e){assert.equal(e,null)}}},"expiry deserialization":{Infinity:{topic:Cookie.fromJSON.bind(null,'{"expires":"Infinity"}'),"is infinite":function(e){assert.strictEqual(e.expires,"Infinity"),assert.equal(e.expires,1/0)}}},"maxAge serialization":{topic:function(){return function(e){var n=new Cookie;return n.key="foo",n.value="bar",n.setMaxAge(e),JSON.stringify(n)}},zero:{topic:function(e){return e(0)},"looks good":function(e){assert.match(e,/"maxAge":0/)}},Infinity:{topic:function(e){return e(1/0)},"looks good":function(e){assert.match(e,/"maxAge":"Infinity"/)}},"-Infinity":{topic:function(e){return e(-(1/0))},"looks good":function(e){assert.match(e,/"maxAge":"-Infinity"/)}},"null":{topic:function(e){return e(null)},"looks good":function(e){assert.match(e,/"maxAge":null/)}}},"maxAge deserialization":{number:{topic:Cookie.fromJSON.bind(null,'{"key":"foo","value":"bar","maxAge":123}'),"is the number":function(e){assert.strictEqual(e.maxAge,123)}},"null":{topic:Cookie.fromJSON.bind(null,'{"key":"foo","value":"bar","maxAge":null}'),"is null":function(e){assert.strictEqual(e.maxAge,null)}},"less than zero":{topic:Cookie.fromJSON.bind(null,'{"key":"foo","value":"bar","maxAge":-123}'),"is -123":function(e){assert.strictEqual(e.maxAge,-123)}},Infinity:{topic:Cookie.fromJSON.bind(null,'{"key":"foo","value":"bar","maxAge":"Infinity"}'),"is inf-as-string":function(e){assert.strictEqual(e.maxAge,"Infinity")}},"-Infinity":{topic:Cookie.fromJSON.bind(null,'{"key":"foo","value":"bar","maxAge":"-Infinity"}'),"is inf-as-string":function(e){assert.strictEqual(e.maxAge,"-Infinity")}}}}).addBatch({permuteDomain:{"base case":{topic:tough.permuteDomain.bind(null,"example.com"),"got the domain":function(e){assert.deepEqual(e,["example.com"])}},"two levels":{topic:tough.permuteDomain.bind(null,"foo.bar.example.com"),"got three things":function(e){assert.deepEqual(e,["example.com","bar.example.com","foo.bar.example.com"])}},"invalid domain":{topic:tough.permuteDomain.bind(null,"foo.bar.example.localduhmain"),"got three things":function(e){assert.equal(e,null)}}},permutePath:{"base case":{topic:tough.permutePath.bind(null,"/"),"just slash":function(e){assert.deepEqual(e,["/"])}},"single case":{topic:tough.permutePath.bind(null,"/foo"),"two things":function(e){assert.deepEqual(e,["/foo","/"])},"path matching":function(e){e.forEach(function(e){assert.ok(tough.pathMatch("/foo",e))})}},"double case":{topic:tough.permutePath.bind(null,"/foo/bar"),"four things":function(e){assert.deepEqual(e,["/foo/bar","/foo","/"])},"path matching":function(e){e.forEach(function(e){assert.ok(tough.pathMatch("/foo/bar",e))})}},"trailing slash":{topic:tough.permutePath.bind(null,"/foo/bar/"),"three things":function(e){assert.deepEqual(e,["/foo/bar","/foo","/"])},"path matching":function(e){e.forEach(function(e){assert.ok(tough.pathMatch("/foo/bar/",e))})}}}}).addBatch({"Issue 1":{topic:function(){var e=new CookieJar;e.setCookie("hello=world; path=/some/path/","http://domain/some/path/file",function(n,t){this.callback(n,{cj:e,cookie:t})}.bind(this))},"stored a cookie":function(e){assert.ok(e.cookie)},"cookie's path was modified to remove unnecessary slash":function(e){assert.equal(e.cookie.path,"/some/path")},"getting it back":{topic:function(e){e.cj.getCookies("http://domain/some/path/file",function(n,t){this.callback(n,{cj:e.cj,cookies:t||[]})}.bind(this))},"got one cookie":function(e){assert.lengthOf(e.cookies,1)},"it's the right one":function(e){var n=e.cookies[0];assert.equal(n.key,"hello"),assert.equal(n.value,"world")}}}}).addBatch({"expiry option":{topic:function(){var e=this.callback,n=new CookieJar;n.setCookie("near=expiry; Domain=example.com; Path=/; Max-Age=1","http://www.example.com",at(-1),function(t,r){e(t,{cj:n,cookie:r})})},"set the cookie":function(e){assert.ok(e.cookie,"didn't set?!"),assert.equal(e.cookie.key,"near")},"then, retrieving":{topic:function(e){var n=this.callback;setTimeout(function(){e.cj.getCookies("http://www.example.com",{http:!0,expire:!1},function(t,r){e.cookies=r,n(t,e)})},2e3)},"got the cookie":function(e){assert.lengthOf(e.cookies,1),assert.equal(e.cookies[0].key,"near")}}}}).addBatch({"trailing semi-colon set into cj":{topic:function(){var e=this.callback,n=new CookieJar,t="http://www.example.com",r=[];r.push(function(e){n.setCookie("broken_path=testme; path=/;",t,at(-1),e)}),r.push(function(e){n.setCookie("b=2; Path=/;;;;",t,at(-1),e)}),async.parallel(r,function(t,r){e(null,{cj:n,cookies:r})})},"check number of cookies":function(e){assert.lengthOf(e.cookies,2,"didn't set")},"check *broken_path* was set properly":function(e){assert.equal(e.cookies[0].key,"broken_path"),assert.equal(e.cookies[0].value,"testme"),assert.equal(e.cookies[0].path,"/")},"check *b* was set properly":function(e){assert.equal(e.cookies[1].key,"b"),assert.equal(e.cookies[1].value,"2"),assert.equal(e.cookies[1].path,"/")},"retrieve the cookie":{topic:function(e){var n=this.callback;e.cj.getCookies("http://www.example.com",{},function(t,r){e.cookies=r,n(t,e)})},"get the cookie":function(e){assert.lengthOf(e.cookies,2),assert.equal(e.cookies[0].key,"broken_path"),assert.equal(e.cookies[0].value,"testme"),assert.equal(e.cookies[1].key,"b"),assert.equal(e.cookies[1].value,"2"),assert.equal(e.cookies[1].path,"/")}}}}).addBatch({Constructor:{topic:function(){return new Cookie({key:"test",value:"b",maxAge:60})},"check for key property":function(e){assert.ok(e),assert.equal(e.key,"test")},"check for value property":function(e){assert.equal(e.value,"b")},"check for maxAge":function(e){assert.equal(e.maxAge,60)},"check for default values for unspecified properties":function(e){assert.equal(e.expires,"Infinity"),assert.equal(e.secure,!1),assert.equal(e.httpOnly,!1)}}}).addBatch({"allPaths option":{topic:function(){var e=new CookieJar,n=[];n.push(e.setCookie.bind(e,"nopath_dom=qq; Path=/; Domain=example.com","http://example.com",{})),n.push(e.setCookie.bind(e,"path_dom=qq; Path=/foo; Domain=example.com","http://example.com",{})),n.push(e.setCookie.bind(e,"nopath_host=qq; Path=/","http://www.example.com",{})),n.push(e.setCookie.bind(e,"path_host=qq; Path=/foo","http://www.example.com",{})),n.push(e.setCookie.bind(e,"other=qq; Path=/","http://other.example.com/",{})),n.push(e.setCookie.bind(e,"other2=qq; Path=/foo","http://other.example.com/foo",{}));var t=this.callback;async.parallel(n,function(n,r){t(n,{cj:e,cookies:r})})},"all set":function(e){assert.equal(e.cookies.length,6),assert.ok(e.cookies.every(function(e){return!!e}))},"getting without allPaths":{topic:function(e){var n=this.callback,t=e.cj;t.getCookies("http://www.example.com/",{},function(e,r){n(e,{cj:t,cookies:r})})},"found just two cookies":function(e){assert.equal(e.cookies.length,2)},"all are path=/":function(e){assert.ok(e.cookies.every(function(e){return"/"===e.path}))},"no 'other' cookies":function(e){assert.ok(!e.cookies.some(function(e){return/^other/.test(e.name)}))}},"getting without allPaths for /foo":{topic:function(e){var n=this.callback,t=e.cj;t.getCookies("http://www.example.com/foo",{},function(e,r){n(e,{cj:t,cookies:r})})},"found four cookies":function(e){assert.equal(e.cookies.length,4)},"no 'other' cookies":function(e){assert.ok(!e.cookies.some(function(e){return/^other/.test(e.name)}))}},"getting with allPaths:true":{topic:function(e){var n=this.callback,t=e.cj;t.getCookies("http://www.example.com/",{allPaths:!0},function(e,r){n(e,{cj:t,cookies:r})})},"found four cookies":function(e){assert.equal(e.cookies.length,4)},"no 'other' cookies":function(e){assert.ok(!e.cookies.some(function(e){return/^other/.test(e.name)}))}}}})["export"](module);