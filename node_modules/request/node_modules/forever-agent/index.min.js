function ForeverAgent(e){var n=this;n.options=e||{},n.requests={},n.sockets={},n.freeSockets={},n.maxSockets=n.options.maxSockets||Agent.defaultMaxSockets,n.minSockets=n.options.minSockets||ForeverAgent.defaultMinSockets,n.on("free",function(e,t,r){var a=t+":"+r;if(n.requests[a]&&n.requests[a].length)n.requests[a].shift().onSocket(e);else if(n.sockets[a].length<n.minSockets){n.freeSockets[a]||(n.freeSockets[a]=[]),n.freeSockets[a].push(e);var i=function(){e.destroy()};e._onIdleError=i,e.on("error",i)}else e.destroy()})}function ForeverAgentSSL(e){ForeverAgent.call(this,e)}function createConnectionSSL(e,n,t){return t="object"==typeof e?e:"object"==typeof n?n:"object"==typeof t?t:{},"number"==typeof e&&(t.port=e),"string"==typeof n&&(t.host=n),tls.connect(t)}module.exports=ForeverAgent,ForeverAgent.SSL=ForeverAgentSSL;var util=require("util"),Agent=require("http").Agent,net=require("net"),tls=require("tls"),AgentSSL=require("https").Agent;util.inherits(ForeverAgent,Agent),ForeverAgent.defaultMinSockets=5,ForeverAgent.prototype.createConnection=net.createConnection,ForeverAgent.prototype.addRequestNoreuse=Agent.prototype.addRequest,ForeverAgent.prototype.addRequest=function(e,n,t){var r=n+":"+t;if(this.freeSockets[r]&&this.freeSockets[r].length>0&&!e.useChunkedEncodingByDefault){var a=this.freeSockets[r].pop();a.removeListener("error",a._onIdleError),delete a._onIdleError,e._reusedSocket=!0,e.onSocket(a)}else this.addRequestNoreuse(e,n,t)},ForeverAgent.prototype.removeSocket=function(e,n,t,r){if(this.sockets[n]){var a=this.sockets[n].indexOf(e);-1!==a&&this.sockets[n].splice(a,1)}else this.sockets[n]&&0===this.sockets[n].length&&(delete this.sockets[n],delete this.requests[n]);if(this.freeSockets[n]){var a=this.freeSockets[n].indexOf(e);-1!==a&&(this.freeSockets[n].splice(a,1),0===this.freeSockets[n].length&&delete this.freeSockets[n])}this.requests[n]&&this.requests[n].length&&this.createSocket(n,t,r).emit("free")},util.inherits(ForeverAgentSSL,ForeverAgent),ForeverAgentSSL.prototype.createConnection=createConnectionSSL,ForeverAgentSSL.prototype.addRequestNoreuse=AgentSSL.prototype.addRequest;