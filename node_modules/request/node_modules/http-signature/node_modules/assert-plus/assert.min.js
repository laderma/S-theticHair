function capitalize(e){return e.charAt(0).toUpperCase()+e.slice(1)}function uncapitalize(e){return e.charAt(0).toLowerCase()+e.slice(1)}function _(){return util.format.apply(util,arguments)}function _assert(e,n,t,r){if(!NDEBUG){t=t||n,r=r||_assert.caller;var i=typeof e;if(i!==n)throw new assert.AssertionError({message:_(TYPE_REQUIRED,t,n),actual:i,expected:n,operator:"===",stackStartFunction:r})}}function _instanceof(e,n,t,r){if(!(NDEBUG||(t=t||n,r=r||_instanceof.caller,e instanceof n)))throw new assert.AssertionError({message:_(TYPE_REQUIRED,t,n.name),actual:_getClass(e),expected:n.name,operator:"instanceof",stackStartFunction:r})}function _getClass(e){return Object.prototype.toString.call(e).slice(8,-1)}function array(e,n,t){if(!NDEBUG){if(t=t||n,!Array.isArray(e))throw new assert.AssertionError({message:_(ARRAY_TYPE_REQUIRED,t,n),actual:typeof e,expected:"array",operator:"Array.isArray",stackStartFunction:array.caller});for(var r=0;r<e.length;r++)_assert(e[r],n,t,array)}}function bool(e,n){_assert(e,"boolean",n,bool)}function buffer(e,n){if(!Buffer.isBuffer(e))throw new assert.AssertionError({message:_(TYPE_REQUIRED,n||"","Buffer"),actual:typeof e,expected:"buffer",operator:"Buffer.isBuffer",stackStartFunction:buffer})}function func(e,n){_assert(e,"function",n)}function number(e,n){if(_assert(e,"number",n),!NDEBUG&&(isNaN(e)||!isFinite(e)))throw new assert.AssertionError({message:_(TYPE_REQUIRED,n,"number"),actual:e,expected:"number",operator:"isNaN",stackStartFunction:number})}function object(e,n){_assert(e,"object",n)}function stream(e,n){_instanceof(e,Stream,n)}function date(e,n){_instanceof(e,Date,n)}function regexp(e,n){_instanceof(e,RegExp,n)}function string(e,n){_assert(e,"string",n)}function uuid(e,n){if(string(e,n),!NDEBUG&&!UUID_REGEXP.test(e))throw new assert.AssertionError({message:_(TYPE_REQUIRED,n,"uuid"),actual:"string",expected:"uuid",operator:"test",stackStartFunction:uuid})}var assert=require("assert"),Stream=require("stream").Stream,util=require("util"),NDEBUG=process.env.NODE_NDEBUG||!1,UUID_REGEXP=/^[a-fA-F0-9]{8}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{4}-[a-fA-F0-9]{12}$/,ARRAY_TYPE_REQUIRED="%s ([%s]) required",TYPE_REQUIRED="%s (%s) is required";module.exports={bool:bool,buffer:buffer,date:date,func:func,number:number,object:object,regexp:regexp,stream:stream,string:string,uuid:uuid},Object.keys(module.exports).forEach(function(e){if("buffer"!==e){var n="arrayOf"+capitalize(e);"bool"===e&&(e="boolean"),"func"===e&&(e="function"),module.exports[n]=function(n,t){array(n,e,t)}}}),Object.keys(module.exports).forEach(function(e){var n="optional"+capitalize(e),t=uncapitalize(e.replace("arrayOf",""));"bool"===t&&(t="boolean"),"func"===t&&(t="function"),-1!==e.indexOf("arrayOf")?module.exports[n]=function(e,n){NDEBUG||void 0===e||array(e,t,n)}:module.exports[n]=function(e,n){NDEBUG||void 0===e||_assert(e,t,n)}}),Object.keys(assert).forEach(function(e){return"AssertionError"===e?void(module.exports[e]=assert[e]):void(module.exports[e]=function(){NDEBUG||assert[e].apply(assert[e],arguments)})});