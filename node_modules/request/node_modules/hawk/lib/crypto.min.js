var Crypto=require("crypto"),Url=require("url"),Utils=require("./utils"),internals={};exports.headerVersion="1",exports.algorithms=["sha1","sha256"],exports.calculateMac=function(e,n,t){var r=exports.generateNormalizedString(e,t),a=Crypto.createHmac(n.algorithm,n.key).update(r),i=a.digest("base64");return i},exports.generateNormalizedString=function(e,n){var t="hawk."+exports.headerVersion+"."+e+"\n"+n.ts+"\n"+n.nonce+"\n"+(n.method||"").toUpperCase()+"\n"+(n.resource||"")+"\n"+n.host.toLowerCase()+"\n"+n.port+"\n"+(n.hash||"")+"\n";return n.ext&&(t+=n.ext.replace("\\","\\\\").replace("\n","\\n")),t+="\n",n.app&&(t+=n.app+"\n"+(n.dlg||"")+"\n"),t},exports.calculatePayloadHash=function(e,n,t){var r=exports.initializePayloadHash(n,t);return r.update(e||""),exports.finalizePayloadHash(r)},exports.initializePayloadHash=function(e,n){var t=Crypto.createHash(e);return t.update("hawk."+exports.headerVersion+".payload\n"),t.update(Utils.parseContentType(n)+"\n"),t},exports.finalizePayloadHash=function(e){return e.update("\n"),e.digest("base64")},exports.calculateTsMac=function(e,n){var t=Crypto.createHmac(n.algorithm,n.key);return t.update("hawk."+exports.headerVersion+".ts\n"+e+"\n"),t.digest("base64")};