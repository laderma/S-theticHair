var parse=require("../"),test=require("tape");test("flag boolean default false",function(e){var n=parse(["moo"],{"boolean":["t","verbose"],"default":{verbose:!1,t:!1}});e.deepEqual(n,{verbose:!1,t:!1,_:["moo"]}),e.deepEqual(typeof n.verbose,"boolean"),e.deepEqual(typeof n.t,"boolean"),e.end()}),test("boolean groups",function(e){var n=parse(["-x","-z","one","two","three"],{"boolean":["x","y","z"]});e.deepEqual(n,{x:!0,y:!1,z:!0,_:["one","two","three"]}),e.deepEqual(typeof n.x,"boolean"),e.deepEqual(typeof n.y,"boolean"),e.deepEqual(typeof n.z,"boolean"),e.end()}),test("boolean and alias with chainable api",function(e){var n=["-h","derp"],t=["--herp","derp"],i=parse(n,{"boolean":"herp",alias:{h:"herp"}}),a=parse(t,{"boolean":"herp",alias:{h:"herp"}}),o={herp:!0,h:!0,_:["derp"]};e.same(i,o),e.same(a,o),e.end()}),test("boolean and alias with options hash",function(e){var n=["-h","derp"],t=["--herp","derp"],r={alias:{h:"herp"},"boolean":"herp"},i=parse(n,r),a=parse(t,r),o={herp:!0,h:!0,_:["derp"]};e.same(i,o),e.same(a,o),e.end()}),test("boolean and alias using explicit true",function(e){var n=["-h","true"],t=["--herp","true"],r={alias:{h:"herp"},"boolean":"h"},i=parse(n,r),a=parse(t,r),o={herp:!0,h:!0,_:[]};e.same(i,o),e.same(a,o),e.end()}),test("boolean and --x=true",function(e){var n=parse(["--boool","--other=true"],{"boolean":"boool"});e.same(n.boool,!0),e.same(n.other,"true"),n=parse(["--boool","--other=false"],{"boolean":"boool"}),e.same(n.boool,!0),e.same(n.other,"false"),e.end()});