$(document).ready(function(){module("Utility"),test("utility: noConflict",function(){var e=_.noConflict();ok(e.isUndefined(_),"The '_' variable has been returned to its previous state.");var n=e.intersect([-1,0,1,2],[1,2,3,4]);equals(n.join(", "),"1, 2","but the intersection function still works"),window._=e}),test("utility: identity",function(){var e={name:"moe"};equals(_.identity(e),e,"moe is the same as his identity")}),test("utility: uniqueId",function(){for(var e=[],n=0;n++<100;)e.push(_.uniqueId());equals(_.uniq(e).length,e.length,"can generate a globally-unique stream of ids")}),test("utility: times",function(){var e=[];_.times(3,function(n){e.push(n)}),ok(_.isEqual(e,[0,1,2]),"is 0 indexed"),e=[],_(3).times(function(n){e.push(n)}),ok(_.isEqual(e,[0,1,2]),"works as a wrapper")}),test("utility: mixin",function(){_.mixin({myReverse:function(e){return e.split("").reverse().join("")}}),equals(_.myReverse("panacea"),"aecanap","mixed in a function to _"),equals(_("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")}),test("utility: _.escape",function(){equals(_.escape("Curly & Moe"),"Curly &amp; Moe"),equals(_.escape("Curly &amp; Moe"),"Curly &amp;amp; Moe")}),test("utility: template",function(){var e=_.template("<%= thing %> is gettin' on my noives!"),n=e({thing:"This"});equals(n,"This is gettin' on my noives!","can do basic attribute interpolation");var t=_.template("A <% this %> B");equals(t(),"A  B");var r=_.template("<%= thing %> is \\ridanculous");equals(r({thing:"This"}),"This is \\ridanculous");var a=_.template('<%= a ? "checked=\\"checked\\"" : "" %>');equals(a({a:!0}),'checked="checked"',"can handle slash escapes in interpolations.");var i=_.template("<ul><%       for (key in people) {     %><li><%= people[key] %></li><% } %></ul>");n=i({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var o=_.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");n=o({numbers:"one\ntwo\nthree\nfour"}),equals(n,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in Javascript");var s=_.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>');n=s({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}}),equals(n,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>');var u=_.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");n=u(),equals(n,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");var l=_.template("It's its, not it's");equals(l({}),"It's its, not it's");var c=_.template("<%      if(foo == 'bar'){     %>Statement quotes and 'quotes'.<% } %>");equals(c({foo:"bar"}),"Statement quotes and 'quotes'.");var f=_.template("This\n		is: <%= x %>.\n	ok.\nend.");equals(f({x:"that"}),"This\n		is: that.\n	ok.\nend.");var d=_.template("<i><%- value %></i>"),n=d({value:"<script>"});equals(n,"<i>&lt;script&gt;</i>");var h={name:"Moe",template:_.template("I'm <%= this.name %>")};if(equals(h.template(),"I'm Moe"),!$.browser.msie){var p=_.template($("#template").html());equals(p({data:12345}).replace(/\s/g,""),"<li>24690</li>")}_.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g};var m=_.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");n=m({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var g=_.template("It's its, not it's");equals(g({}),"It's its, not it's");var c=_.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");equals(c({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g};var v=_.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");n=v({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equals(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var b=_.template("It's its, not it's");equals(b({}),"It's its, not it's");var c=_.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");equals(c({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={interpolate:/\{\{(.+?)\}\}/g};var y=_.template("Hello {{planet}}!");equals(y({planet:"World"}),"Hello World!","can mimic mustache.js");var k=_.template("a null undefined {{planet}}");equals(k({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")})});