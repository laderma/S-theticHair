(function(){var e,n,t,r,a,i,o,s,u,l,c,f,d;r=require("fs"),l=require("path"),a=require("./helpers"),u=require("./optparse"),e=require("./coffee-script"),d={},s={},f=[],o=null,a.extend(global,{task:function(e,n,t){var r;return t||(r=[n,t],t=r[0],n=r[1]),d[e]={name:e,description:n,action:t}},option:function(e,n,t){return f.push([e,n,t])},invoke:function(e){return d[e]||i(e),d[e].action(s)}}),exports.run=function(){var a,i,l,d,h,p;if(global.__originalDirname=r.realpathSync("."),process.chdir(n(__originalDirname)),i=process.argv.slice(2),e.run(r.readFileSync("Cakefile").toString(),{filename:"Cakefile"}),o=new u.OptionParser(f),!i.length)return c();try{s=o.parse(i)}catch(m){return t(""+m)}for(h=s.arguments,p=[],l=0,d=h.length;d>l;l++)a=h[l],p.push(invoke(a));return p},c=function(){var e,n,t,r,a,i;r=l.relative||l.resolve,e=l.join(r(__originalDirname,process.cwd()),"Cakefile"),console.log(""+e+" defines the following tasks:\n");for(t in d)i=d[t],a=20-t.length,a=a>0?Array(a+1).join(" "):"",n=i.description?"# "+i.description:"",console.log("cake "+t+a+" "+n);return f.length?console.log(o.help()):void 0},t=function(e){return console.error(e+"\n"),console.log('To see a list of all tasks/options, run "cake"'),process.exit(1)},i=function(e){return t("No such task: "+e)},n=function(e){var t;if(l.existsSync(l.join(e,"Cakefile")))return e;if(t=l.normalize(l.join(e,"..")),t!==e)return n(t);throw new Error("Cakefile not found in "+process.cwd())}}).call(this);