"use strict";function resolveYamlInteger(e){var n,t,r,i;return YAML_INTEGER_PATTERN.test(e)?(n=e.replace(/_/g,""),t="-"===n[0]?-1:1,i=[],0<="+-".indexOf(n[0])&&(n=n.slice(1)),"0"===n?0:/^0b/.test(n)?t*parseInt(n.slice(2),2):/^0x/.test(n)?t*parseInt(n,16):"0"===n[0]?t*parseInt(n,8):0<=n.indexOf(":")?(n.split(":").forEach(function(e){i.unshift(parseInt(e,10))}),n=0,r=1,i.forEach(function(e){n+=e*r,r*=60}),t*n):t*parseInt(n,10)):NIL}var NIL=require("../common").NIL,Type=require("../type"),YAML_INTEGER_PATTERN=new RegExp("^(?:[-+]?0b[0-1_]+|[-+]?0[0-7_]+|[-+]?(?:0|[1-9][0-9_]*)|[-+]?0x[0-9a-fA-F_]+|[-+]?[1-9][0-9_]*(?::[0-5]?[0-9])+)$");module.exports=new Type("tag:yaml.org,2002:int",{loader:{kind:"string",resolver:resolveYamlInteger},dumper:{kind:"integer",defaultStyle:"decimal",representer:{binary:function(e){return"0b"+e.toString(2)},octal:function(e){return"0"+e.toString(8)},decimal:function(e){return e.toString(10)},hexadecimal:function(e){return"0x"+e.toString(16).toUpperCase()}},styleAliases:{binary:[2,"bin"],octal:[8,"oct"],decimal:[10,"dec"],hexadecimal:[16,"hex"]}}});