$(document).ready(function(){var e;module("Utility",{setup:function(){e=_.clone(_.templateSettings)},teardown:function(){_.templateSettings=e}}),test("#750 - Return _ instance.",2,function(){var e=_([]);ok(_(e)===e),ok(new _(e)===e)}),test("identity",function(){var e={name:"moe"};equal(_.identity(e),e,"moe is the same as his identity")}),test("uniqueId",function(){for(var e=[],n=0;n++<100;)e.push(_.uniqueId());equal(_.uniq(e).length,e.length,"can generate a globally-unique stream of ids")}),test("times",function(){var e=[];_.times(3,function(n){e.push(n)}),ok(_.isEqual(e,[0,1,2]),"is 0 indexed"),e=[],_(3).times(function(n){e.push(n)}),ok(_.isEqual(e,[0,1,2]),"works as a wrapper")}),test("mixin",function(){_.mixin({myReverse:function(e){return e.split("").reverse().join("")}}),equal(_.myReverse("panacea"),"aecanap","mixed in a function to _"),equal(_("champ").myReverse(),"pmahc","mixed in a function to the OOP wrapper")}),test("_.escape",function(){equal(_.escape("Curly & Moe"),"Curly &amp; Moe"),equal(_.escape("Curly &amp; Moe"),"Curly &amp;amp; Moe"),equal(_.escape(null),"")}),test("_.unescape",function(){var e="Curly & Moe";equal(_.unescape("Curly &amp; Moe"),e),equal(_.unescape("Curly &amp;amp; Moe"),"Curly &amp; Moe"),equal(_.unescape(null),""),equal(_.unescape(_.escape(e)),e)}),test("template",function(){var e=_.template("<%= thing %> is gettin' on my noives!"),n=e({thing:"This"});equal(n,"This is gettin' on my noives!","can do basic attribute interpolation");var t=_.template("A <% this %> B");equal(t(),"A  B");var r=_.template("<%= thing %> is \\ridanculous");equal(r({thing:"This"}),"This is \\ridanculous");var i=_.template('<%= a ? "checked=\\"checked\\"" : "" %>');equal(i({a:!0}),'checked="checked"',"can handle slash escapes in interpolations.");var a=_.template("<ul><%       for (key in people) {     %><li><%= people[key] %></li><% } %></ul>");n=a({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var o=_.template("<ul><% _.each(numbers.split('\\n'), function(item) { %><li><%= item %></li><% }) %></ul>");n=o({numbers:"one\ntwo\nthree\nfour"}),equal(n,"<ul><li>one</li><li>two</li><li>three</li><li>four</li></ul>","Can use escaped characters (e.g. \\n) in Javascript");var s=_.template('<%= pageCount %> <%= thumbnails[pageCount] %> <% _.each(thumbnails, function(p) { %><div class="thumbnail" rel="<%= p %>"></div><% }); %>');n=s({pageCount:3,thumbnails:{1:"p1-thumbnail.gif",2:"p2-thumbnail.gif",3:"p3-thumbnail.gif"}}),equal(n,'3 p3-thumbnail.gif <div class="thumbnail" rel="p1-thumbnail.gif"></div><div class="thumbnail" rel="p2-thumbnail.gif"></div><div class="thumbnail" rel="p3-thumbnail.gif"></div>');var u=_.template("<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");n=u(),equal(n,"<div><p>Just some text. Hey, I know this is silly but it aids consistency.</p></div>");var l=_.template("It's its, not it's");equal(l({}),"It's its, not it's");var c=_.template("<%      if(foo == 'bar'){     %>Statement quotes and 'quotes'.<% } %>");equal(c({foo:"bar"}),"Statement quotes and 'quotes'.");var f=_.template("This\n		is: <%= x %>.\n	ok.\nend.");equal(f({x:"that"}),"This\n		is: that.\n	ok.\nend.");var d=_.template("<i><%- value %></i>"),n=d({value:"<script>"});equal(n,"<i>&lt;script&gt;</i>");var p={name:"Moe",template:_.template("I'm <%= this.name %>")};if(equal(p.template(),"I'm Moe"),!$.browser.msie){var h=_.template($("#template").html());equal(h({data:12345}).replace(/\s/g,""),"<li>24690</li>")}_.templateSettings={evaluate:/\{\{([\s\S]+?)\}\}/g,interpolate:/\{\{=([\s\S]+?)\}\}/g};var m=_.template("<ul>{{ for (key in people) { }}<li>{{= people[key] }}</li>{{ } }}</ul>");n=m({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var g=_.template("It's its, not it's");equal(g({}),"It's its, not it's");var c=_.template("{{ if(foo == 'bar'){ }}Statement quotes and 'quotes'.{{ } }}");equal(c({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={evaluate:/<\?([\s\S]+?)\?>/g,interpolate:/<\?=([\s\S]+?)\?>/g};var v=_.template("<ul><? for (key in people) { ?><li><?= people[key] ?></li><? } ?></ul>");n=v({people:{moe:"Moe",larry:"Larry",curly:"Curly"}}),equal(n,"<ul><li>Moe</li><li>Larry</li><li>Curly</li></ul>","can run arbitrary javascript in templates");var b=_.template("It's its, not it's");equal(b({}),"It's its, not it's");var c=_.template("<? if(foo == 'bar'){ ?>Statement quotes and 'quotes'.<? } ?>");equal(c({foo:"bar"}),"Statement quotes and 'quotes'."),_.templateSettings={interpolate:/\{\{(.+?)\}\}/g};var y=_.template("Hello {{planet}}!");equal(y({planet:"World"}),"Hello World!","can mimic mustache.js");var w=_.template("a null undefined {{planet}}");equal(w({planet:"world"}),"a null undefined world","can handle missing escape and evaluate settings")}),test("_.template provides the generated function source, when a SyntaxError occurs",function(){try{_.template("<b><%= if %></b>")}catch(e){ok(e.source.indexOf("( if )")>0)}}),test("_.template handles \\u2028 & \\u2029",function(){var e=_.template('<p>\u2028<%= "\\u2028\\u2029" %>\u2029</p>');strictEqual(e(),"<p>\u2028\u2028\u2029\u2029</p>")}),test("result calls functions and returns primitives",function(){var e={w:"",x:"x",y:function(){return this.x}};strictEqual(_.result(e,"w"),""),strictEqual(_.result(e,"x"),"x"),strictEqual(_.result(e,"y"),"x"),strictEqual(_.result(e,"z"),void 0),strictEqual(_.result(null,"x"),null)}),test("_.templateSettings.variable",function(){var e="<%=data.x%>",n={x:"x"};strictEqual(_.template(e,n,{variable:"data"}),"x"),_.templateSettings.variable="data",strictEqual(_.template(e)(n),"x")}),test("#547 - _.templateSettings is unchanged by custom settings.",function(){ok(!_.templateSettings.variable),_.template("",{},{variable:"x"}),ok(!_.templateSettings.variable)}),test("#556 - undefined template variables.",function(){var e=_.template("<%=x%>");strictEqual(e({x:null}),""),strictEqual(e({x:void 0}),"");var n=_.template("<%-x%>");strictEqual(n({x:null}),""),strictEqual(n({x:void 0}),"");var t=_.template("<%=x.foo%>");strictEqual(t({x:{}}),""),strictEqual(t({x:{}}),"");var r=_.template("<%-x.foo%>");strictEqual(r({x:{}}),""),strictEqual(r({x:{}}),"")}),test("interpolate evaluates code only once.",2,function(){var e=0,n=_.template("<%= f() %>");n({f:function(){ok(!e++)}});var t=0,r=_.template("<%- f() %>");r({f:function(){ok(!t++)}})}),test("#746 - _.template settings are not modified.",1,function(){var e={};_.template("",null,e),deepEqual(e,{})}),test("#779 - delimeters are applied to unescaped text.",1,function(){var e=_.template("<<\nx\n>>",null,{evaluate:/<<(.*?)>>/g});strictEqual(e(),"<<\nx\n>>")})});