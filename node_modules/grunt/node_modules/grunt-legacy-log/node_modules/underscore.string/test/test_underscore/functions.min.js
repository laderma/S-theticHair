$(document).ready(function(){module("Functions"),test("bind",function(){var e={name:"moe"},n=function(e){return"name: "+(this.name||e)},t=_.bind(n,e);equal(t(),"name: moe","can bind a function to a context"),t=_(n).bind(e),equal(t(),"name: moe","can do OO-style binding"),t=_.bind(n,null,"curly"),equal(t(),"name: curly","can bind without specifying a context"),n=function(e,n){return e+": "+n},n=_.bind(n,this,"hello"),equal(n("moe"),"hello: moe","the function was partially applied in advance");var n=_.bind(n,this,"curly");equal(n(),"hello: curly","the function was completely applied in advance");var n=function(e,n,t){return e+": "+n+" "+t};n=_.bind(n,this,"hello","moe","curly"),equal(n(),"hello: moe curly","the function was partially applied in advance and can accept multiple arguments"),n=function(e,n){equal(this,e,n)},_.bind(n,0,0,"can bind a function to `0`")(),_.bind(n,"","","can bind a function to an empty string")(),_.bind(n,!1,!1,"can bind a function to `false`")();var r=function(){return this},i=_.bind(r,{hello:"moe curly"});equal((new i).hello,void 0,"function should not be bound to the context, to comply with ECMAScript 5"),equal(i().hello,"moe curly","When called without the new operator, it's OK to be bound to the context")}),test("bindAll",function(){var e={name:"curly"},n={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}};e.getName=n.getName,_.bindAll(n,"getName","sayHi"),e.sayHi=n.sayHi,equal(e.getName(),"name: curly","unbound function is bound to current object"),equal(e.sayHi(),"hi: moe","bound function is still bound to original object"),e={name:"curly"},n={name:"moe",getName:function(){return"name: "+this.name},sayHi:function(){return"hi: "+this.name}},_.bindAll(n),e.sayHi=n.sayHi,equal(e.sayHi(),"hi: moe","calling bindAll with no arguments binds all functions to the object")}),test("memoize",function(){var e=function(n){return 2>n?n:e(n-1)+e(n-2)},n=_.memoize(e);equal(e(10),55,"a memoized version of fibonacci produces identical results"),equal(n(10),55,"a memoized version of fibonacci produces identical results");var t=function(e){return e},r=_.memoize(t);equal(t("toString"),"toString","checks hasOwnProperty"),equal(r("toString"),"toString","checks hasOwnProperty")}),asyncTest("delay",2,function(){var e=!1;_.delay(function(){e=!0},100),setTimeout(function(){ok(!e,"didn't delay the function quite yet")},50),setTimeout(function(){ok(e,"delayed the function"),start()},150)}),asyncTest("defer",1,function(){var e=!1;_.defer(function(n){e=n},!0),_.delay(function(){ok(e,"deferred the function"),start()},50)}),asyncTest("throttle",2,function(){var e=0,n=function(){e++},t=_.throttle(n,100);t(),t(),t(),setTimeout(t,70),setTimeout(t,120),setTimeout(t,140),setTimeout(t,190),setTimeout(t,220),setTimeout(t,240),_.delay(function(){equal(e,1,"incr was called immediately")},30),_.delay(function(){equal(e,4,"incr was throttled"),start()},400)}),asyncTest("throttle arguments",2,function(){var e=0,n=function(n){e=n},t=_.throttle(n,100);t(1),t(2),t(3),setTimeout(function(){t(4)},120),setTimeout(function(){t(5)},140),setTimeout(function(){t(6)},250),_.delay(function(){equal(e,1,"updated to latest value")},40),_.delay(function(){equal(e,6,"updated to latest value"),start()},400)}),asyncTest("throttle once",2,function(){var e=0,n=function(){return++e},t=_.throttle(n,100),r=t();_.delay(function(){equal(r,1,"throttled functions return their value"),equal(e,1,"incr was called once"),start()},220)}),asyncTest("throttle twice",1,function(){var e=0,n=function(){e++},t=_.throttle(n,100);t(),t(),_.delay(function(){equal(e,2,"incr was called twice"),start()},220)}),asyncTest("throttle repeatedly with results",9,function(){var e=0,n=function(){return++e},t=_.throttle(n,100),r=[],i=function(){r.push(t())};i(),i(),i(),setTimeout(i,70),setTimeout(i,120),setTimeout(i,140),setTimeout(i,190),setTimeout(i,240),setTimeout(i,260),_.delay(function(){equal(r[0],1,"incr was called once"),equal(r[1],1,"incr was throttled"),equal(r[2],1,"incr was throttled"),equal(r[3],1,"incr was throttled"),equal(r[4],2,"incr was called twice"),equal(r[5],2,"incr was throttled"),equal(r[6],2,"incr was throttled"),equal(r[7],3,"incr was called thrice"),equal(r[8],3,"incr was throttled"),start()},400)}),asyncTest("debounce",1,function(){var e=0,n=function(){e++},t=_.debounce(n,50);t(),t(),t(),setTimeout(t,30),setTimeout(t,60),setTimeout(t,90),setTimeout(t,120),setTimeout(t,150),_.delay(function(){equal(e,1,"incr was debounced"),start()},220)}),asyncTest("debounce asap",5,function(){var e,n,t,r=0,i=function(){return++r},a=_.debounce(i,50,!0);e=a(),n=a(),t=a(),equal(e,1),equal(n,1),equal(t,1),equal(r,1,"incr was called immediately"),setTimeout(a,30),setTimeout(a,60),setTimeout(a,90),setTimeout(a,120),setTimeout(a,150),_.delay(function(){equal(r,1,"incr was debounced"),start()},220)}),asyncTest("debounce asap recursively",2,function(){var e=0,n=_.debounce(function(){e++,5>e&&n()},50,!0);n(),equal(e,1,"incr was called immediately"),_.delay(function(){equal(e,1,"incr was debounced"),start()},70)}),test("once",function(){var e=0,n=_.once(function(){e++});n(),n(),equal(e,1)}),test("wrap",function(){var e=function(e){return"hi: "+e},n=_.wrap(e,function(e,n){return e(n)+" "+n.split("").reverse().join("")});equal(n("moe"),"hi: moe eom","wrapped the saluation function");var t=function(){return"Hello "},r={name:"Moe"};r.hi=_.wrap(t,function(e){return e()+this.name}),equal(r.hi(),"Hello Moe");var i=function(){},a=_.wrap(i,function(e){return Array.prototype.slice.call(arguments,0)}),o=a(["whats","your"],"vector","victor");deepEqual(o,[i,["whats","your"],"vector","victor"])}),test("compose",function(){var e=function(e){return"hi: "+e},n=function(e){return e+"!"},t=_.compose(n,e);equal(t("moe"),"hi: moe!","can compose a function that takes another"),t=_.compose(e,n),equal(t("moe"),"hi: moe!","in this case, the functions are also commutative")}),test("after",function(){var e=function(e,n){for(var t=0,r=_.after(e,function(){t++});n--;)r();return t};equal(e(5,5),1,"after(N) should fire after being called N times"),equal(e(5,4),0,"after(N) should not fire unless called N times"),equal(e(0,0),1,"after(0) should fire immediately")})});