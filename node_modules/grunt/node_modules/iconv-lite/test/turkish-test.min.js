var vows=require("vows"),assert=require("assert"),iconv=require(__dirname+"/../"),ascii="\x00\b	\n\f\r !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~",encodings=[{name:"windows1254",variations:["windows-1254","win-1254","win1254","cp1254","cp-1254",1254],strings:{empty:"",ascii:ascii,turkish:"€‚ƒ„…†‡ˆ‰Š‹Œ‘’“”•–—˜™š›œŸ¡¢£¤¥¦§¨©ª«¬®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ",untranslatable:""},encodedStrings:{empty:new Buffer(""),ascii:new Buffer(ascii,"binary"),turkish:new Buffer("¡¢£¤¥¦§¨©ª«¬®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ","binary")}},{name:"iso88599",variations:["iso-8859-9","turkish","turkish8","cp28599","cp-28599",28599],strings:{empty:"",ascii:ascii,turkish:" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏĞÑÒÓÔÕÖ×ØÙÚÛÜİŞßàáâãäåæçèéêëìíîïğñòóôõö÷øùúûüışÿ",untranslatable:""},encodedStrings:{empty:new Buffer(""),ascii:new Buffer(ascii,"binary"),turkish:new Buffer(" ¡¢£¤¥¦§¨©ª«¬­®¯°±²³´µ¶·¸¹º»¼½¾¿ÀÁÂÃÄÅÆÇÈÉÊËÌÍÎÏÐÑÒÓÔÕÖ×ØÙÚÛÜÝÞßàáâãäåæçèéêëìíîïðñòóôõö÷øùúûüýþÿ","binary")}}],testsBatch={};encodings.forEach(function(e){var n=e.variations[0],t="turkish",r={"Convert to empty buffer":function(){assert.strictEqual(iconv.toEncoding("",n).toString("binary"),new Buffer("").toString("binary"))},"Convert from empty buffer":function(){assert.strictEqual(iconv.fromEncoding(new Buffer(""),n),"")},"Convert from buffer":function(){for(var t in e.encodedStrings)assert.strictEqual(iconv.fromEncoding(e.encodedStrings[t],n),e.strings[t])},"Convert to buffer":function(){for(var t in e.encodedStrings)assert.strictEqual(iconv.toEncoding(e.strings[t],n).toString("binary"),e.encodedStrings[t].toString("binary"))},"Try different variations of encoding":function(){e.variations.forEach(function(n){assert.strictEqual(iconv.fromEncoding(e.encodedStrings[t],n),e.strings[t]),assert.strictEqual(iconv.toEncoding(e.strings[t],n).toString("binary"),e.encodedStrings[t].toString("binary"))})},"Untranslatable chars are converted to defaultCharSingleByte":function(){var t=e.strings.untranslatable.split("").map(function(e){return iconv.defaultCharSingleByte}).join("");assert.strictEqual(iconv.toEncoding(e.strings.untranslatable,n).toString("binary"),t)}};testsBatch[e.name+":"]=r}),vows.describe("Test Turkish encodings").addBatch(testsBatch)["export"](module);