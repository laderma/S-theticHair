"use strict";function isValidMultiTaskTarget(e){return!/^_|^options$/.test(e)}function loadTask(e){loadTaskStack.push(registry),registry={tasks:[],untasks:[],meta:{info:lastInfo,filepath:e}};var a,n=path.basename(e),t='Loading "'+n+'" tasks...',r=0;try{a=require(path.resolve(e)),"function"==typeof a&&a.call(grunt,grunt),grunt.verbose.write(t).ok(),["un",""].forEach(function(e){var n=grunt.util._.chain(registry[e+"tasks"]).uniq().sort().value();n.length>0&&(r++,grunt.verbose.writeln((e?"- ":"+ ")+grunt.log.wordlist(n)))}),0===r&&grunt.verbose.warn("No tasks were registered or unregistered.")}catch(i){grunt.log.write(t).error().verbose.error(i.stack).or.error(i)}registry=loadTaskStack.pop()||{}}function loadTasksMessage(e){0===loadTaskDepth&&(lastInfo=e),grunt.verbose.subhead("Registering "+e+" tasks.")}function loadTasks(e){try{var n=grunt.file.glob.sync("*.{js,coffee}",{cwd:e,maxDepth:1});n.forEach(function(n){loadTask(path.join(e,n))})}catch(t){grunt.log.verbose.error(t.stack).or.error(t)}}var grunt=require("../grunt"),path=require("path"),parent=grunt.util.task.create(),task=module.exports=Object.create(parent),registry={tasks:[],untasks:[],meta:{}},lastInfo,loadTaskDepth=0,errorcount;task.registerTask=function(e){registry.tasks.push(e),parent.registerTask.apply(task,arguments);var n=task._tasks[e];n.meta=grunt.util._.clone(registry.meta);var t=n.fn;return n.fn=function(e){var r=n.name;errorcount=grunt.fail.errorcount,Object.defineProperty(this,"errorCount",{enumerable:!0,get:function(){return grunt.fail.errorcount-errorcount}}),this.requires=task.requires.bind(task),this.requiresConfig=grunt.config.requires,this.options=function(){var e=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([r,"options"])]),n=grunt.util._.extend.apply(null,e);return grunt.verbose.writeflags(n,"Options"),n};var a=t.alias||n.multi&&(!e||"*"===e)?"verbose":"log";return grunt[a].header('Running "'+this.nameArgs+'"'+(this.name!==this.nameArgs?" ("+this.name+")":"")+" task"),grunt[a].debug("Task source: "+n.meta.filepath),t.apply(this,arguments)},task},task.normalizeMultiTaskFiles=function(e,n){var t,r,a=[];if("object"===grunt.util.kindOf(e))if("src"in e||"dest"in e){r={};for(t in e)"options"!==t&&(r[t]=e[t]);a.push(r)}else if("object"===grunt.util.kindOf(e.files))for(t in e.files)a.push({src:e.files[t],dest:grunt.config.process(t)});else Array.isArray(e.files)&&grunt.util._.flatten(e.files).forEach(function(e){var n;if("src"in e||"dest"in e)a.push(e);else for(n in e)a.push({src:e[n],dest:grunt.config.process(n)})});else a.push({src:e,dest:grunt.config.process(n)});return 0===a.length?(grunt.verbose.writeln("File: "+"[no files]".yellow),[]):(a=grunt.util._(a).chain().forEach(function(e){"src"in e&&e.src&&(Array.isArray(e.src)?e.src=grunt.util._.flatten(e.src):e.src=[e.src])}).map(function(e){var n=grunt.util._.extend({},e);if(delete n.src,delete n.dest,e.expand)return grunt.file.expandMapping(e.src,e.dest,n).map(function(n){var t=grunt.util._.extend({},e);return t.orig=grunt.util._.extend({},e),t.src=grunt.config.process(n.src),t.dest=grunt.config.process(n.dest),["expand","cwd","flatten","rename","ext"].forEach(function(e){delete t[e]}),t});var t=grunt.util._.extend({},e);return t.orig=grunt.util._.extend({},e),"src"in t&&Object.defineProperty(t,"src",{enumerable:!0,get:function r(){var t;return"result"in r||(t=e.src,t=Array.isArray(t)?grunt.util._.flatten(t):[t],r.result=grunt.file.expand(n,t)),r.result}}),"dest"in t&&(t.dest=e.dest),t}).flatten().value(),grunt.option("verbose")&&a.forEach(function(e){var n=[];"src"in e&&n.push(e.src.length>0?grunt.log.wordlist(e.src):"[no src]".yellow),"dest"in e&&n.push("-> "+(e.dest?String(e.dest).cyan:"[no dest]".yellow)),n.length>0&&grunt.verbose.writeln("Files: "+n.join(" "))}),a)},task.registerMultiTask=function(e,n,t){null==t&&(t=n,n="Custom multi task.");var r;task.registerTask(e,n,function(e){var n=r.name;if(this.args=grunt.util.toArray(arguments).slice(1),!e||"*"===e)return task.runAllTargets(n,this.args);if(!isValidMultiTaskTarget(e))throw new Error('Invalid target "'+e+'" specified.');return this.requiresConfig([n,e]),this.options=function(){var t=grunt.config([n,e]),r=[{}].concat(grunt.util.toArray(arguments)).concat([grunt.config([n,"options"]),"object"===grunt.util.kindOf(t)?t.options:{}]),a=grunt.util._.extend.apply(null,r);return grunt.verbose.writeflags(a,"Options"),a},this.target=e,this.flags={},this.args.forEach(function(e){this.flags[e]=!0},this),this.data=grunt.config([n,e]),this.files=task.normalizeMultiTaskFiles(this.data,e),Object.defineProperty(this,"filesSrc",{enumerable:!0,get:function(){return grunt.util._(this.files).chain().pluck("src").flatten().uniq().value()}.bind(this)}),t.apply(this,this.args)}),r=task._tasks[e],r.multi=!0},task.registerInitTask=function(e,n,t){task.registerTask(e,n,t),task._tasks[e].init=!0},task.renameTask=function(e,n){var t;try{return t=parent.renameTask.apply(task,arguments),registry.untasks.push(e),registry.tasks.push(n),t}catch(r){grunt.log.error(r.message)}},task.runAllTargets=function(e,n){var t=Object.keys(grunt.config.getRaw(e)||{});return 0===t.length?(grunt.log.error('No "'+e+'" targets found.'),!1):void t.filter(isValidMultiTaskTarget).forEach(function(t){task.run([e,t].concat(n||[]).join(":"))})};var loadTaskStack=[];task.loadTasks=function(e){loadTasksMessage('"'+e+'"'),grunt.file.exists(e)?loadTasks(e):grunt.log.error('Tasks directory "'+e+'" not found.')},task.loadNpmTasks=function(e){loadTasksMessage('"'+e+'" local Npm module');var n=path.resolve("node_modules"),t=path.join(n,e,"package.json"),r=grunt.file.exists(t)?grunt.file.readJSON(t):{keywords:[]};if(r.keywords&&-1!==r.keywords.indexOf("gruntcollection"))return loadTaskDepth++,Object.keys(r.dependencies).forEach(function(t){var r=grunt.file.findup("node_modules/"+t,{cwd:path.resolve("node_modules",e),nocase:!0});r&&task.loadNpmTasks(path.relative(n,r))}),void loadTaskDepth--;var a=path.join(n,e,"tasks");grunt.file.exists(a)?loadTasks(a):grunt.log.error('Local Npm module "'+e+'" not found. Is it installed?')},task.init=function(e,n){n||(n={});var t=e.length>0&&e.every(function(e){var n=task._taskPlusArgs(e).task;return n&&n.init}),r=t?null:grunt.option("gruntfile")||grunt.file.findup("Gruntfile.{js,coffee}",{nocase:!0}),a='Reading "'+(r?path.basename(r):"???")+'" Gruntfile...';r&&grunt.file.exists(r)?(grunt.verbose.writeln().write(a).ok(),process.chdir(grunt.option("base")||path.dirname(r)),loadTasksMessage("Gruntfile"),loadTask(r)):n.help||t||(grunt.option("gruntfile")?(grunt.log.writeln().write(a).error(),grunt.fatal('Unable to find "'+r+'" Gruntfile.',grunt.fail.code.MISSING_GRUNTFILE)):grunt.option("help")||(grunt.verbose.writeln().write(a).error(),grunt.log.writelns("A valid Gruntfile could not be found. Please see the getting started guide for more information on how to configure grunt: http://gruntjs.com/getting-started"),grunt.fatal("Unable to find Gruntfile.",grunt.fail.code.MISSING_GRUNTFILE))),(grunt.option("npm")||[]).forEach(task.loadNpmTasks),(grunt.option("tasks")||[]).forEach(task.loadTasks)};