"use strict";var debug=require("debug")("fileprocessor"),File=require("./file"),_=require("lodash"),_defaultPatterns={html:[[/<script.+src=['"]([^"']+)["']/gm,"Update the HTML to reference our concat/min/revved script files"],[/<link[^\>]+href=['"]([^"']+)["']/gm,"Update the HTML with the new css filenames"],[/<img[^\>]+src=['"]([^"']+)["']/gm,"Update the HTML with the new img filenames"],[/data-main\s*=['"]([^"']+)['"]/gm,"Update the HTML with data-main tags",function(n){return n.match(/\.js$/)?n:n+".js"},function(n){return n.replace(".js","")}],[/data-(?!main).[^=]+=['"]([^'"]+)['"]/gm,"Update the HTML with data-* tags"],[/url\(\s*['"]([^"']+)["']\s*\)/gm,"Update the HTML with background imgs, case there is some inline style"],[/<a[^\>]+href=['"]([^"']+)["']/gm,"Update the HTML with anchors images"],[/<input[^\>]+src=['"]([^"']+)["']/gm,"Update the HTML with reference in input"]],css:[[/(?:src=|url\(\s*)['"]?([^'"\)]+)['"]?\s*\)?/gm,"Update the CSS to reference our revved images"]]},FileProcessor=module.exports=function(n,e,t){if(!n)throw new Error("No pattern given");if("string"==typeof n||n instanceof String){if(!_.contains(_.keys(_defaultPatterns),n))throw new Error("Unsupported pattern: "+n);this.patterns=_defaultPatterns[n]}else this.patterns=n;if(this.log=t||function(){},!e)throw new Error("Missing parameter: finder");this.finder=e};FileProcessor.prototype.replaceBlocks=function(n){var e=n.content,t=/\r\n/g.test(e)?"\r\n":"\n";return n.blocks.forEach(function(n){var r=n.raw.join(t);e=e.replace(r,this.replaceWith(n))},this),e},FileProcessor.prototype.replaceWith=function(n){var e,t=n.dest,r=n.conditionalStart?n.conditionalStart+"\n"+n.indent:"",a=n.conditionalEnd?"\n"+n.indent+n.conditionalEnd:"";if("css"===n.type){var i=n.media?' media="'+n.media+'"':"";e=n.indent+r+'<link rel="stylesheet" href="'+t+'"'+i+"/>"+a}else n.defer?e=n.indent+r+'<script defer src="'+t+'"></script>'+a:"js"===n.type&&(e=n.indent+r+'<script src="'+t+'"></script>'+a);return e},FileProcessor.prototype.replaceWithRevved=function(n,e){var t=this,r=n,a=this.patterns,i=function(n){return n};return a.forEach(function(n){var a=n[2]||i,s=n[3]||i;t.log(n[1]),r=r.replace(n[0],function(n,r){var i=a(r);debug("Let's replace "+r),debug("Looking for revved version of "+i+" in ",e);var o=t.finder.find(i,e);debug("Found file '%s'",o);var l=n.replace(r,s(o));return i!==o&&t.log(n+" changed to "+l),l})}),r},FileProcessor.prototype.process=function(n,e){debug("processing file %s",n,e),"string"==typeof n||n instanceof String?this.file=new File(n):this.file=n,e&&0!==e.length&&(this.file.searchPath=e);var t=this.replaceWithRevved(this.replaceBlocks(this.file),this.file.searchPath);return t};