"use strict";var debug=require("debug")("revvedfinder"),path=require("path"),RevvedFinder=module.exports=function(n){"function"==typeof n?(debug("using function locator"),this.expandfn=n):(debug("using file locator %s",n),this.mapping=n)},regexpQuote=function(n){return(n+"").replace(/([.?*+\^$\[\]\\(){}|\-])/g,"\\$1")};RevvedFinder.prototype.getCandidatesFromMapping=function(n,e){var t=path.dirname(n),r=[],a=this;return e.forEach(function(e){var i=path.normalize(path.join(e,n));if(debug("Looking at mapping for %s (from %s/%s)",i,e,n),a.mapping[i]){var s=path.basename(a.mapping[i]);r.push(t+"/"+s),debug("Found a candidate: %s/%s",t,s)}}),r},RevvedFinder.prototype.getCandidatesFromFS=function(n,e){var t=path.extname(n),r=path.basename(n,t),a=path.dirname(n),i="[0-9a-fA-F]+",s="("+i+"\\."+regexpQuote(r)+")",o="("+regexpQuote(r)+"\\."+i+regexpQuote(t)+")",l=new RegExp(s+"|"+o),u=[],c=this;return e.forEach(function(e){var i=path.join(e,a,r+".*"+t),s=path.join(e,a,"*."+r+t);if(0!==i.indexOf("#")){debug("Looking for %s and %s on disk",i,s);var o=c.expandfn([i,s]);debug("Found ",o);var h=o.filter(function(n){return n.match(l)});h.forEach(function(e){var t=path.basename(e);n.match(/\//)?(debug("Adding %s / %s to candidates",a,t),u.push(a+"/"+t)):(debug("Adding %s to candidates",t),u.push(t))})}}),u},RevvedFinder.prototype.getRevvedCandidates=function(n,e){var t;return this.mapping?(debug("Looking at mapping"),t=this.getCandidatesFromMapping(n,e)):(debug("Looking on disk"),t=this.getCandidatesFromFS(n,e)),t},RevvedFinder.prototype.find=function(n,e){var a,i,t=n,r=e;if(("string"==typeof e||e instanceof String)&&(r=[e]),debug("Looking for revved version of %s in ",n,r),n.match(/:\/\//)||""===n)return n;"/"===t[0]&&(a=!0,t=t.replace(/^(\/+)/,function(n,e){return i=e,""}));var s=this.getRevvedCandidates(t,r),o=s[0];return debug("filepath is now ",o),o?(a&&(o=i+o),debug("Let's return %s",o),o):n};