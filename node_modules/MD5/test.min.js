var md5=require("./md5.js"),assert=require("assert");describe("MD5",function(){it('should return the expected MD5 hash for "message"',function(){assert.equal("78e731027d8fd50ed642340b7c9a63b3",md5("message"))}),it("should not return the same hash for random numbers twice",function(){var n=Math.floor(1e5*Math.random()+1)+(new Date).getTime(),e=Math.floor(1e5*Math.random()+1)+(new Date).getTime();n!==e?assert.notEqual(md5(n),md5(e)):assert.equal(md5(n),md5(n))}),it("should support Node.js Buffers",function(){var n=new Buffer("message áßäöü","utf8");assert.equal(md5(n),md5("message áßäöü"))}),it("should be able to use a binary encoded string",function(){var n=md5("abc",{asString:!0}),a=(md5(n+"a",{asString:!0,encoding:"binary"}),md5(n+"a",{encoding:"binary"}));assert.equal(a,"131f0ac52813044f5110e4aec638c169")})});