if("function"!=typeof define)var define=require("amdefine")(module,require);define(function(e,n,t){var r=e("../../lib/source-map/source-map-generator").SourceMapGenerator,i=e("../../lib/source-map/source-map-consumer").SourceMapConsumer,a=e("../../lib/source-map/source-node").SourceNode;e("./util");n["test some simple stuff"]=function(e,n){new r({file:"foo.js",sourceRoot:"."});e.ok(!0);new r;e.ok(!0)},n["test JSON serialization"]=function(e,n){var t=new r({file:"foo.js",sourceRoot:"."});e.equal(t.toString(),JSON.stringify(t))},n["test adding mappings (case 1)"]=function(e,n){var t=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){t.addMapping({generated:{line:1,column:1}})})},n["test adding mappings (case 2)"]=function(e,n){var t=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){t.addMapping({generated:{line:1,column:1},source:"bar.js",original:{line:1,column:1}})})},n["test adding mappings (case 3)"]=function(e,n){var t=new r({file:"generated-foo.js",sourceRoot:"."});e.doesNotThrow(function(){t.addMapping({generated:{line:1,column:1},source:"bar.js",original:{line:1,column:1},name:"someToken"})})},n["test adding mappings (invalid)"]=function(e,n){var t=new r({file:"generated-foo.js",sourceRoot:"."});e["throws"](function(){t.addMapping({})}),e["throws"](function(){t.addMapping({generated:{line:1,column:1},original:{line:1,column:1}})})},n["test that the correct mappings are being generated"]=function(e,n){var t=new r({file:"min.js",sourceRoot:"/the/root"});t.addMapping({generated:{line:1,column:1},original:{line:1,column:1},source:"one.js"}),t.addMapping({generated:{line:1,column:5},original:{line:1,column:5},source:"one.js"}),t.addMapping({generated:{line:1,column:9},original:{line:1,column:11},source:"one.js"}),t.addMapping({generated:{line:1,column:18},original:{line:1,column:21},source:"one.js",name:"bar"}),t.addMapping({generated:{line:1,column:21},original:{line:2,column:3},source:"one.js"}),t.addMapping({generated:{line:1,column:28},original:{line:2,column:10},source:"one.js",name:"baz"}),t.addMapping({generated:{line:1,column:32},original:{line:2,column:14},source:"one.js",name:"bar"}),t.addMapping({generated:{line:2,column:1},original:{line:1,column:1},source:"two.js"}),t.addMapping({generated:{line:2,column:5},original:{line:1,column:5},source:"two.js"}),t.addMapping({generated:{line:2,column:9},original:{line:1,column:11},source:"two.js"}),t.addMapping({generated:{line:2,column:18},original:{line:1,column:21},source:"two.js",name:"n"}),t.addMapping({generated:{line:2,column:21},original:{line:2,column:3},source:"two.js"}),t.addMapping({generated:{line:2,column:28},original:{line:2,column:10},source:"two.js",name:"n"}),t=JSON.parse(t.toString()),n.assertEqualMaps(e,t,n.testMap)},n["test that source content can be set"]=function(e,n){var t=new r({file:"min.js",sourceRoot:"/the/root"});t.addMapping({generated:{line:1,column:1},original:{line:1,column:1},source:"one.js"}),t.addMapping({generated:{line:2,column:1},original:{line:1,column:1},source:"two.js"}),t.setSourceContent("one.js","one file content"),t=JSON.parse(t.toString()),e.equal(t.sources[0],"one.js"),e.equal(t.sources[1],"two.js"),e.equal(t.sourcesContent[0],"one file content"),e.equal(t.sourcesContent[1],null)},n["test .fromSourceMap"]=function(e,n){var t=r.fromSourceMap(new i(n.testMap));n.assertEqualMaps(e,t.toJSON(),n.testMap)},n["test .fromSourceMap with sourcesContent"]=function(e,n){var t=r.fromSourceMap(new i(n.testMapWithSourcesContent));n.assertEqualMaps(e,t.toJSON(),n.testMapWithSourcesContent)},n["test applySourceMap"]=function(e,n){var t=new a(null,null,null,[new a(2,0,"fileX","lineX2\n"),"genA1\n",new a(2,0,"fileY","lineY2\n"),"genA2\n",new a(1,0,"fileX","lineX1\n"),"genA3\n",new a(1,0,"fileY","lineY1\n")]),o=t.toStringWithSourceMap({file:"fileA"}).map;o.setSourceContent("fileX","lineX1\nlineX2\n"),o=o.toJSON(),t=new a(null,null,null,["gen1\n",new a(1,0,"fileA","lineA1\n"),new a(2,0,"fileA","lineA2\n"),new a(3,0,"fileA","lineA3\n"),new a(4,0,"fileA","lineA4\n"),new a(1,0,"fileB","lineB1\n"),new a(2,0,"fileB","lineB2\n"),"gen2\n"]);var s=t.toStringWithSourceMap({file:"fileGen"}).map;s.setSourceContent("fileB","lineB1\nlineB2\n"),s=s.toJSON(),t=new a(null,null,null,["gen1\n",new a(2,0,"fileX","lineA1\n"),new a(2,0,"fileA","lineA2\n"),new a(2,0,"fileY","lineA3\n"),new a(4,0,"fileA","lineA4\n"),new a(1,0,"fileB","lineB1\n"),new a(2,0,"fileB","lineB2\n"),"gen2\n"]);var u=t.toStringWithSourceMap({file:"fileGen"}).map;u.setSourceContent("fileX","lineX1\nlineX2\n"),u.setSourceContent("fileB","lineB1\nlineB2\n"),u=u.toJSON();var l=r.fromSourceMap(new i(s));l.applySourceMap(new i(o));var c=l.toJSON();n.assertEqualMaps(e,c,u)},n["test applySourceMap throws when file is missing"]=function(e,n){var t=new r({file:"test.js"}),a=new r;e["throws"](function(){t.applySourceMap(new i(a.toJSON()))})},n["test the two additional parameters of applySourceMap"]=function(e,n){var t=new r({file:"bundle.js"});t.addMapping({generated:{line:3,column:3},original:{line:2,column:2},source:"../coffee/foo.coffee"}),t.setSourceContent("../coffee/foo.coffee","foo coffee"),t.addMapping({generated:{line:13,column:13},original:{line:12,column:12},source:"/bar.coffee"}),t.setSourceContent("/bar.coffee","bar coffee"),t.addMapping({generated:{line:23,column:23},original:{line:22,column:22},source:"http://www.example.com/baz.coffee"}),t.setSourceContent("http://www.example.com/baz.coffee","baz coffee"),t=new i(t.toJSON());var a=new r({file:"bundle.min.js",sourceRoot:".."});a.addMapping({generated:{line:1,column:1},original:{line:3,column:3},source:"temp/bundle.js"}),a.addMapping({generated:{line:11,column:11},original:{line:13,column:13},source:"temp/bundle.js"}),a.addMapping({generated:{line:21,column:21},original:{line:23,column:23},source:"temp/bundle.js"}),a=new i(a.toJSON());var o=function(e){var n=new r({file:"bundle.min.js",sourceRoot:".."});return n.addMapping({generated:{line:1,column:1},original:{line:2,column:2},source:e[0]}),n.setSourceContent(e[0],"foo coffee"),n.addMapping({generated:{line:11,column:11},original:{line:12,column:12},source:e[1]}),n.setSourceContent(e[1],"bar coffee"),n.addMapping({generated:{line:21,column:21},original:{line:22,column:22},source:e[2]}),n.setSourceContent(e[2],"baz coffee"),n.toJSON()},s=function(e){var n=r.fromSourceMap(a);return n.applySourceMap(t,"../temp/bundle.js",e),n.toJSON()};n.assertEqualMaps(e,s("../temp_maps"),o(["coffee/foo.coffee","/bar.coffee","http://www.example.com/baz.coffee"])),n.assertEqualMaps(e,s("/app/temp_maps"),o(["/app/coffee/foo.coffee","/bar.coffee","http://www.example.com/baz.coffee"])),n.assertEqualMaps(e,s("http://foo.org/app/temp_maps"),o(["http://foo.org/app/coffee/foo.coffee","http://foo.org/bar.coffee","http://www.example.com/baz.coffee"]))},n["test sorting with duplicate generated mappings"]=function(e,n){var t=new r({file:"test.js"});t.addMapping({generated:{line:3,column:0},original:{line:2,column:0},source:"a.js"}),t.addMapping({generated:{line:2,column:0}}),t.addMapping({generated:{line:2,column:0}}),t.addMapping({generated:{line:1,column:0},original:{line:1,column:0},source:"a.js"}),n.assertEqualMaps(e,t.toJSON(),{version:3,file:"test.js",sources:["a.js"],names:[],mappings:"AAAA;A;AACA"})},n["test ignore duplicate mappings."]=function(e,n){var i,a,t={file:"min.js",sourceRoot:"/the/root"},o={generated:{line:1,column:0}},s={generated:{line:2,column:2}};i=new r(t),a=new r(t),i.addMapping(o),i.addMapping(o),a.addMapping(o),n.assertEqualMaps(e,i.toJSON(),a.toJSON()),i.addMapping(s),i.addMapping(o),a.addMapping(s),n.assertEqualMaps(e,i.toJSON(),a.toJSON());var u={generated:{line:1,column:0},original:{line:11,column:0},source:"srcMapping1.js"},l={generated:{line:2,column:2},original:{line:11,column:0},source:"srcMapping2.js"};i=new r(t),a=new r(t),i.addMapping(u),i.addMapping(u),a.addMapping(u),n.assertEqualMaps(e,i.toJSON(),a.toJSON()),i.addMapping(l),i.addMapping(u),a.addMapping(l),n.assertEqualMaps(e,i.toJSON(),a.toJSON());var c={generated:{line:1,column:0},original:{line:11,column:0},source:"fullMapping1.js",name:"fullMapping1"},f={generated:{line:2,column:2},original:{line:11,column:0},source:"fullMapping2.js",name:"fullMapping2"};i=new r(t),a=new r(t),i.addMapping(c),i.addMapping(c),a.addMapping(c),n.assertEqualMaps(e,i.toJSON(),a.toJSON()),i.addMapping(f),i.addMapping(c),a.addMapping(f),n.assertEqualMaps(e,i.toJSON(),a.toJSON())},n["test github issue #72, check for duplicate names or sources"]=function(e,n){var t=new r({file:"test.js"});t.addMapping({generated:{line:1,column:1},original:{line:2,column:2},source:"a.js",name:"foo"}),t.addMapping({generated:{line:3,column:3},original:{line:4,column:4},source:"a.js",name:"foo"}),n.assertEqualMaps(e,t.toJSON(),{version:3,file:"test.js",sources:["a.js"],names:["foo"],mappings:"CACEA;;GAEEA"})}});